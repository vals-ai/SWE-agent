diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 000000000..4cadb7229
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,28 @@
+
+import pandas as pd
+from sklearn.base import BaseEstimator, TransformerMixin
+from sklearn import set_config
+from sklearn.pipeline import make_union
+
+index = pd.date_range(start="2020-01-01", end="2020-01-05", inclusive="left", freq="H")
+data = pd.DataFrame(index=index, data=[10] * len(index), columns=["value"])
+data["date"] = index.date
+
+
+class MyTransformer(BaseEstimator, TransformerMixin):
+    def fit(self, X, y=None, **kwargs):
+        return self
+
+    def transform(self, X, y=None):
+        return X["value"].groupby(X["date"]).sum()
+
+
+# This works.
+set_config(transform_output="default")
+print("With default output:")
+print(make_union(MyTransformer()).fit_transform(data))
+
+# This does not work.
+set_config(transform_output="pandas")
+print("With pandas output:")
+print(make_union(MyTransformer()).fit_transform(data))
\ No newline at end of file
diff --git a/sklearn/utils/_set_output.py b/sklearn/utils/_set_output.py
index 335773c6a..706a0ee0a 100644
--- a/sklearn/utils/_set_output.py
+++ b/sklearn/utils/_set_output.py
@@ -56,7 +56,9 @@ def _wrap_in_pandas_container(
         if columns is not None:
             data_to_wrap.columns = columns
         if index is not None:
-            data_to_wrap.index = index
+            # Only set index if lengths match to avoid ValueError
+            if len(index) == len(data_to_wrap):
+                data_to_wrap.index = index
         return data_to_wrap
 
     return pd.DataFrame(data_to_wrap, index=index, columns=columns)
