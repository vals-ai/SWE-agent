diff --git a/django/db/migrations/serializer.py b/django/db/migrations/serializer.py
index 7d226955d5..486bcefb4a 100644
--- a/django/db/migrations/serializer.py
+++ b/django/db/migrations/serializer.py
@@ -90,12 +90,12 @@ class DeconstructableSerializer(BaseSerializer):
 
     @staticmethod
     def _serialize_path(path):
-        module, name = path.rsplit(".", 1)
-        if module == "django.db.models":
+        # Modified to preserve full nested class paths
+        if path.startswith("django.db.models."):
             imports = {"from django.db import models"}
-            name = "models.%s" % name
+            name = path.replace("django.db.models.", "models.", 1)
         else:
-            imports = {"import %s" % module}
+            imports = {"import " + path.rsplit(".", 1)[0] if "." in path else path}
             name = path
         return name, imports
 
diff --git a/test_project/manage.py b/test_project/manage.py
new file mode 100755
index 0000000000..1ed529a477
--- /dev/null
+++ b/test_project/manage.py
@@ -0,0 +1,17 @@
+
+#!/usr/bin/env python
+
+import os
+import sys
+
+if __name__ == '__main__':
+    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'test_project.settings')
+    try:
+        from django.core.management import execute_from_command_line
+    except ImportError as exc:
+        raise ImportError(
+            "Couldn't import Django. Are you sure it's installed and "
+            "available on your PYTHONPATH environment variable? Did you "
+            "forget to activate a virtual environment?"
+        ) from exc
+    execute_from_command_line(sys.argv)
\ No newline at end of file
diff --git a/test_project/test.db b/test_project/test.db
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/test_project/test_app/__init__.py b/test_project/test_app/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/test_project/test_app/migrations/0001_initial.py b/test_project/test_app/migrations/0001_initial.py
new file mode 100644
index 0000000000..3a45ee6653
--- /dev/null
+++ b/test_project/test_app/migrations/0001_initial.py
@@ -0,0 +1,22 @@
+# Generated by Django 3.1 on 2025-04-27 20:42
+
+from django.db import migrations, models
+import test_app.models.models.Outer
+
+
+class Migration(migrations.Migration):
+
+    initial = True
+
+    dependencies = [
+    ]
+
+    operations = [
+        migrations.CreateModel(
+            name='A',
+            fields=[
+                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('field', test_app.models.models.Outer.Inner(max_length=20)),
+            ],
+        ),
+    ]
diff --git a/test_project/test_app/migrations/__init__.py b/test_project/test_app/migrations/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/test_project/test_app/models/models.py b/test_project/test_app/models/models.py
new file mode 100644
index 0000000000..59a0394d2b
--- /dev/null
+++ b/test_project/test_app/models/models.py
@@ -0,0 +1,9 @@
+
+from django.db import models
+
+class Outer(object):
+    class Inner(models.CharField):
+        pass
+
+class A(models.Model):
+    field = Outer.Inner(max_length=20)
\ No newline at end of file
diff --git a/test_project/test_project/settings.py b/test_project/test_project/settings.py
new file mode 100644
index 0000000000..5f2c92fef8
--- /dev/null
+++ b/test_project/test_project/settings.py
@@ -0,0 +1,15 @@
+
+INSTALLED_APPS = [
+    'django.contrib.auth',
+    'django.contrib.contenttypes',
+    'test_app',
+]
+
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': '/testbed/test_project/test.db',
+    }
+}
+
+SECRET_KEY = 'test-secret-key'
\ No newline at end of file
