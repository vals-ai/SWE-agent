diff --git a/django/db/migrations/executor.py b/django/db/migrations/executor.py
index 57042a8690..146fa32710 100644
--- a/django/db/migrations/executor.py
+++ b/django/db/migrations/executor.py
@@ -254,6 +254,8 @@ class MigrationExecutor:
         if migration.replaces:
             for app_label, name in migration.replaces:
                 self.recorder.record_unapplied(app_label, name)
+            # Also mark the squashed migration as unapplied
+            self.recorder.record_unapplied(migration.app_label, migration.name)
         else:
             self.recorder.record_unapplied(migration.app_label, migration.name)
         # Report progress
diff --git a/tests/migrations/test_executor.py b/tests/migrations/test_executor.py
index e61d8f1276..30a3de7797 100644
--- a/tests/migrations/test_executor.py
+++ b/tests/migrations/test_executor.py
@@ -103,6 +103,9 @@ class ExecutorTests(MigrationTestBase):
         # Are the tables gone?
         self.assertTableNotExists("migrations_author")
         self.assertTableNotExists("migrations_book")
+        # Check that the squashed migration is marked as unapplied
+        recorder = MigrationRecorder(connection)
+        self.assertFalse(recorder.has_applied("migrations", "0001_squashed_0002"))
 
     @override_settings(MIGRATION_MODULES={"migrations": "migrations.test_migrations_non_atomic"})
     def test_non_atomic_migration(self):
