diff --git a/django/core/management/base.py b/django/core/management/base.py
index abc6f79a15..119a39cb3d 100644
--- a/django/core/management/base.py
+++ b/django/core/management/base.py
@@ -71,6 +71,15 @@ class CommandParser(ArgumentParser):
         else:
             raise CommandError("Error: %s" % message)
 
+    def add_subparsers(self, **kwargs):
+        if 'parser_class' not in kwargs:
+            def parser_class(*args, **kw):
+                kw.setdefault('missing_args_message', self.missing_args_message)
+                kw.setdefault('called_from_command_line', self.called_from_command_line)
+                return CommandParser(*args, **kw)
+            kwargs['parser_class'] = parser_class
+        return super().add_subparsers(**kwargs)
+
 
 def handle_default_options(options):
     """
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..862f070dd3
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,10 @@
+
+from django.core.management.base import BaseCommand
+
+class Command(BaseCommand):
+    def add_arguments(self, parser):
+        subparsers = parser.add_subparsers(required=True)
+        create = subparsers.add_parser("create")
+        create.add_argument("name")
+    def handle(self, *args, **options):
+        pass
\ No newline at end of file
