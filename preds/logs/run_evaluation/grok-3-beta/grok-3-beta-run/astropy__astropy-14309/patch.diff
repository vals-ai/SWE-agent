diff --git a/astropy/io/fits/connect.py b/astropy/io/fits/connect.py
index 4b6150f4ac..a1e92dbaf6 100644
--- a/astropy/io/fits/connect.py
+++ b/astropy/io/fits/connect.py
@@ -69,7 +69,10 @@ def is_fits(origin, filepath, fileobj, *args, **kwargs):
             (".fits", ".fits.gz", ".fit", ".fit.gz", ".fts", ".fts.gz")
         ):
             return True
-    return isinstance(args[0], (HDUList, TableHDU, BinTableHDU, GroupsHDU))
+    # Check if args is not empty before accessing args[0]
+    if args:
+        return isinstance(args[0], (HDUList, TableHDU, BinTableHDU, GroupsHDU))
+    return False
 
 
 def _decode_mixins(tbl):
diff --git a/reproduce_bug.py b/reproduce_bug.py
new file mode 100644
index 0000000000..79a8c6a49c
--- /dev/null
+++ b/reproduce_bug.py
@@ -0,0 +1,7 @@
+
+from astropy.io.registry import identify_format
+from astropy.table import Table
+
+# This should cause an IndexError
+result = identify_format("write", Table, "bububu.ecsv", None, [], {})
+print(result)
\ No newline at end of file
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 0000000000..0e17764cc8
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,17 @@
+
+from astropy.io.registry import identify_format
+from astropy.table import Table
+
+# Test with a non-FITS file extension
+result1 = identify_format("write", Table, "test.txt", None, [], {})
+print("Non-FITS extension (test.txt):", result1)
+
+# Test with a FITS file extension
+result2 = identify_format("write", Table, "test.fits", None, [], {})
+print("FITS extension (test.fits):", result2)
+
+# Test with no path provided
+result3 = identify_format("write", Table, None, None, [], {})
+print("No path provided:", result3)
+
+print("All tests completed successfully, no errors.")
\ No newline at end of file
