diff --git a/django/db/models/query_utils.py b/django/db/models/query_utils.py
index ae0f886107..48a4a56f67 100644
--- a/django/db/models/query_utils.py
+++ b/django/db/models/query_utils.py
@@ -87,7 +87,10 @@ class Q(tree.Node):
         args, kwargs = (), {}
         if len(self.children) == 1 and not isinstance(self.children[0], Q):
             child = self.children[0]
-            kwargs = {child[0]: child[1]}
+            if isinstance(child, tuple) and len(child) == 2:
+                kwargs = {child[0]: child[1]}
+            else:
+                args = (child,)
         else:
             args = tuple(self.children)
             if self.connector != self.default:
diff --git a/reproduce_q_deconstruct.py b/reproduce_q_deconstruct.py
new file mode 100644
index 0000000000..f7bfdabe49
--- /dev/null
+++ b/reproduce_q_deconstruct.py
@@ -0,0 +1,24 @@
+
+import django
+from django.conf import settings
+from django.db.models import Q, Exists
+
+# Configure minimal Django settings
+settings.configure(
+    INSTALLED_APPS=[
+        'django.contrib.auth',
+        'django.contrib.contenttypes',
+    ],
+    AUTH_USER_MODEL='auth.User',
+)
+django.setup()
+
+from django.contrib.auth import get_user_model
+
+# Reproducing the issue with Q object deconstruction
+q_object = Q(Exists(get_user_model().objects.filter(username='jim')))
+try:
+    result = q_object.deconstruct()
+    print('Deconstruction successful:', result)
+except Exception as e:
+    print('Error during deconstruction:', str(e))
\ No newline at end of file
diff --git a/test_q_deconstruct.py b/test_q_deconstruct.py
new file mode 100644
index 0000000000..96017c5556
--- /dev/null
+++ b/test_q_deconstruct.py
@@ -0,0 +1,38 @@
+
+import django
+from django.conf import settings
+from django.db.models import Q, Exists
+
+# Configure minimal Django settings
+settings.configure(
+    INSTALLED_APPS=[
+        'django.contrib.auth',
+        'django.contrib.contenttypes',
+    ],
+    AUTH_USER_MODEL='auth.User',
+)
+django.setup()
+
+from django.contrib.auth import get_user_model
+
+# Test 1: Single key-value pair
+q1 = Q(x=1)
+print('Test 1 - Single key-value pair:', q1.deconstruct())
+
+# Test 2: Multiple key-value pairs
+q2 = Q(x=1, y=2)
+print('Test 2 - Multiple key-value pairs:', q2.deconstruct())
+
+# Test 3: Single Exists object
+q3 = Q(Exists(get_user_model().objects.filter(username='jim')))
+print('Test 3 - Single Exists object:', q3.deconstruct())
+
+# Test 4: Combined Q objects
+q4 = Q(x=1) & Q(y=2)
+print('Test 4 - Combined Q objects:', q4.deconstruct())
+
+# Test 5: Negated Q object
+q5 = ~Q(x=1)
+print('Test 5 - Negated Q object:', q5.deconstruct())
+
+print('All tests completed successfully.')
\ No newline at end of file
