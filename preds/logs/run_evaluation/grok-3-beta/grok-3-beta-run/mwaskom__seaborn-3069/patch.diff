diff --git a/seaborn/_core/plot.py b/seaborn/_core/plot.py
index 4f0290a4..3aabb415 100644
--- a/seaborn/_core/plot.py
+++ b/seaborn/_core/plot.py
@@ -1627,6 +1627,8 @@ class Plotter:
 
     def _finalize_figure(self, p: Plot) -> None:
 
+        from seaborn._core.scales import Nominal
+
         for sub in self._subplots:
             ax = sub["ax"]
             for axis in "xy":
@@ -1644,6 +1646,14 @@ class Plotter:
                         hi = cast(float, hi) + 0.5
                     ax.set(**{f"{axis}lim": (lo, hi)})
 
+                # Check if the scale is Nominal and apply categorical-like settings
+                if axis_key in p._scales and isinstance(p._scales[axis_key], Nominal):
+                    # Disable grid for this axis
+                    getattr(ax, f"{axis}axis").grid(False)
+                    # Invert y-axis if it's the y-axis with Nominal scale
+                    if axis == "y":
+                        ax.invert_yaxis()
+
         engine_default = None if p._target is not None else "tight"
         layout_engine = p._layout_spec.get("engine", engine_default)
         set_layout_engine(self._figure, layout_engine)
diff --git a/seaborn/_core/scales.py b/seaborn/_core/scales.py
index bbd71ec1..fb343879 100644
--- a/seaborn/_core/scales.py
+++ b/seaborn/_core/scales.py
@@ -190,7 +190,7 @@ class Nominal(Scale):
             # TODO Currently just used in non-Coordinate contexts, but should
             # we use this to (A) set the padding we want for categorial plots
             # and (B) allow the values parameter for a Coordinate to set xlim/ylim
-            axis.set_view_interval(0, len(units_seed) - 1)
+            axis.set_view_interval(-0.5, len(units_seed) - 0.5)
 
         new._matplotlib_scale = mpl_scale
 
