diff --git a/lib/matplotlib/dates.py b/lib/matplotlib/dates.py
index 4d8ddf3ee5..9d10e8eed1 100644
--- a/lib/matplotlib/dates.py
+++ b/lib/matplotlib/dates.py
@@ -797,7 +797,7 @@ class ConciseDateFormatter(ticker.Formatter):
         # 3: hours, 4: minutes, 5: seconds, 6: microseconds
         for level in range(5, -1, -1):
             if len(np.unique(tickdate[:, level])) > 1:
-                if level < 2:
+                if level < 1:
                     show_offset = False
                 break
             elif level == 0:
diff --git a/reproduce_bug.py b/reproduce_bug.py
new file mode 100644
index 0000000000..9a109f9854
--- /dev/null
+++ b/reproduce_bug.py
@@ -0,0 +1,27 @@
+
+import matplotlib.pyplot as plt
+import matplotlib.dates as mdates
+from datetime import datetime, timedelta
+
+#create time array
+initial = datetime(2021,2,14,0,0,0)
+time_array = [initial + timedelta(days=x) for x in range(1,200)]
+
+#create data array
+data = [-x**2/20000 for x in range(1,200)]
+
+
+#plot data
+fig,ax = plt.subplots()
+ax.plot(time_array,data) 
+        
+locator = mdates.AutoDateLocator()
+formatter = mdates.ConciseDateFormatter(locator)
+
+ax.grid(True)
+ax.set_ylabel("Temperature ($°C)")
+ax.xaxis.set_major_locator(locator)   
+ax.xaxis.set_major_formatter(formatter)
+fig.autofmt_xdate() #automatically makes the x-labels rotate
+
+plt.show()
\ No newline at end of file
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 0000000000..c81b843540
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,39 @@
+
+import matplotlib.pyplot as plt
+import matplotlib.dates as mdates
+from datetime import datetime, timedelta
+
+# Function to create and plot data for a given start date
+def plot_data(start_date, title, filename):
+    # Create time array for 200 days
+    time_array = [start_date + timedelta(days=x) for x in range(1, 200)]
+    # Create dummy data
+    data = [-x**2/20000 for x in range(1, 200)]
+    # Plot data
+    fig, ax = plt.subplots()
+    ax.plot(time_array, data)
+    locator = mdates.AutoDateLocator()
+    formatter = mdates.ConciseDateFormatter(locator)
+    ax.grid(True)
+    ax.set_ylabel("Temperature ($°C)")
+    ax.xaxis.set_major_locator(locator)
+    ax.xaxis.set_major_formatter(formatter)
+    ax.set_title(title)
+    fig.autofmt_xdate()
+    plt.savefig(filename)
+    plt.close()
+
+# Test cases with different starting months in 2021
+start_dates = [
+    datetime(2021, 2, 14),  # February start (as in original issue)
+    datetime(2021, 6, 1),   # June start (mid-year)
+    datetime(2021, 11, 1),  # November start (late in year)
+]
+
+for start_date in start_dates:
+    title = f'Data starting {start_date.strftime("%B %Y")}'
+    filename = f'plot_{start_date.strftime("%b_%Y")}.png'
+    plot_data(start_date, title, filename)
+    print(f'Generated plot: {filename}')
+
+print('All test plots generated.')
\ No newline at end of file
