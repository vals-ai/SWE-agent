diff --git a/astropy/units/decorators.py b/astropy/units/decorators.py
index 8bece5a850..4cccf551ba 100644
--- a/astropy/units/decorators.py
+++ b/astropy/units/decorators.py
@@ -221,7 +221,10 @@ class QuantityInput:
             with add_enabled_equivalencies(self.equivalencies):
                 return_ = wrapped_function(*func_args, **func_kwargs)
             if wrapped_signature.return_annotation is not inspect.Signature.empty:
-                return return_.to(wrapped_signature.return_annotation)
+                if return_ is not None:
+                    return return_.to(wrapped_signature.return_annotation)
+                else:
+                    return return_
             else:
                 return return_
 
diff --git a/extended_test.py b/extended_test.py
new file mode 100644
index 0000000000..99e113e6c2
--- /dev/null
+++ b/extended_test.py
@@ -0,0 +1,34 @@
+
+import astropy.units as u
+
+# Test 1: Constructor with return type None
+class TestClass1(object):
+    @u.quantity_input
+    def __init__(self, voltage: u.V) -> None:
+        self.voltage = voltage
+
+# Test 2: Constructor without return type hint
+class TestClass2(object):
+    @u.quantity_input
+    def __init__(self, current: u.A):
+        self.current = current
+
+# Test 3: Regular function with return type hint
+@u.quantity_input
+def power(voltage: u.V, current: u.A) -> u.W:
+    return voltage * current
+
+if __name__ == '__main__':
+    # Test constructor with return type None
+    obj1 = TestClass1(5.0 * u.V)
+    print('Test 1 passed: Constructor with return type None')
+    
+    # Test constructor without return type hint
+    obj2 = TestClass2(2.0 * u.A)
+    print('Test 2 passed: Constructor without return type hint')
+    
+    # Test regular function with return type hint
+    result = power(5.0 * u.V, 2.0 * u.A)
+    print(f'Test 3 passed: Power calculation result = {result}')
+    
+    print('All tests completed successfully, no errors.')
\ No newline at end of file
diff --git a/poc.py b/poc.py
new file mode 100644
index 0000000000..f93f201c94
--- /dev/null
+++ b/poc.py
@@ -0,0 +1,13 @@
+
+import astropy.units as u
+
+
+class PoC(object):
+
+    @u.quantity_input
+    def __init__(self, voltage: u.V) -> None:
+        pass
+
+
+if __name__ == '__main__':
+    poc = PoC(1.*u.V)
\ No newline at end of file
