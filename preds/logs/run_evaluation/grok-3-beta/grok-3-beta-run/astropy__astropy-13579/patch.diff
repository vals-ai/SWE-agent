diff --git a/astropy/wcs/wcsapi/wrappers/sliced_wcs.py b/astropy/wcs/wcsapi/wrappers/sliced_wcs.py
index d7605b078c..ea25030e70 100644
--- a/astropy/wcs/wcsapi/wrappers/sliced_wcs.py
+++ b/astropy/wcs/wcsapi/wrappers/sliced_wcs.py
@@ -251,7 +251,12 @@ class SlicedLowLevelWCS(BaseWCSWrapper):
                 iworld_curr += 1
                 world_arrays_new.append(world_arrays[iworld_curr])
             else:
-                world_arrays_new.append(1.)
+                # Use the reference value from the original WCS for sliced dimensions
+                # Fallback to the value at the sliced index if available, otherwise use 0 or a default
+                if hasattr(self._wcs, 'wcs') and hasattr(self._wcs.wcs, 'crval'):
+                    world_arrays_new.append(self._wcs.wcs.crval[iworld])
+                else:
+                    world_arrays_new.append(0.0)
 
         world_arrays_new = np.broadcast_arrays(*world_arrays_new)
         pixel_arrays = list(self._wcs.world_to_pixel_values(*world_arrays_new))
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..ec1f4fcb1b
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,52 @@
+
+import numpy as np
+import astropy.wcs
+from astropy.coordinates import SkyCoord
+import astropy.units as u
+
+nx = 100
+ny = 25
+nz = 2
+wcs_header = {
+    'WCSAXES': 3,
+    'CRPIX1': (nx + 1)/2,
+    'CRPIX2': (ny + 1)/2,
+    'CRPIX3': 1.0,
+    'PC1_1': 0.0,
+    'PC1_2': -1.0,
+    'PC1_3': 0.0,
+    'PC2_1': 1.0,
+    'PC2_2': 0.0,
+    'PC2_3': -1.0,
+    'CDELT1': 5,
+    'CDELT2': 5,
+    'CDELT3': 0.055,
+    'CUNIT1': 'arcsec',
+    'CUNIT2': 'arcsec',
+    'CUNIT3': 'Angstrom',
+    'CTYPE1': 'HPLN-TAN',
+    'CTYPE2': 'HPLT-TAN',
+    'CTYPE3': 'WAVE',
+    'CRVAL1': 0.0,
+    'CRVAL2': 0.0,
+    'CRVAL3': 1.05,
+}
+fits_wcs = astropy.wcs.WCS(header=wcs_header)
+
+# Test world_to_pixel on unsliced WCS
+pt = SkyCoord(Tx=0*u.arcsec, Ty=0*u.arcsec, frame=astropy.wcs.utils.wcs_to_celestial_frame(fits_wcs))
+result1 = fits_wcs.world_to_pixel(pt, 1.05*u.angstrom)
+print('Unsliced WCS result:', result1)
+
+# Test world_to_pixel on sliced WCS
+ll_sliced_wcs = astropy.wcs.wcsapi.SlicedLowLevelWCS(fits_wcs, 0)
+hl_sliced_wcs = astropy.wcs.wcsapi.HighLevelWCSWrapper(ll_sliced_wcs)
+result2 = hl_sliced_wcs.world_to_pixel(pt)
+print('Sliced WCS result:', result2)
+
+# Test pixel_to_world on both
+px, py, pz = fits_wcs.world_to_pixel(pt, 1.05*u.angstrom)
+result3 = fits_wcs.pixel_to_world(px, py, pz)
+print('Pixel to world unsliced:', result3)
+result4 = hl_sliced_wcs.pixel_to_world(px, py)
+print('Pixel to world sliced:', result4)
\ No newline at end of file
