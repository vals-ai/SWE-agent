diff --git a/src/_pytest/capture.py b/src/_pytest/capture.py
index 3f9c60fb9..8dd7287cd 100644
--- a/src/_pytest/capture.py
+++ b/src/_pytest/capture.py
@@ -478,10 +478,10 @@ class FDCapture(FDCaptureBinary):
     def snap(self):
         self._assert_state("snap", ("started", "suspended"))
         self.tmpfile.seek(0)
-        res = self.tmpfile.read()
+        raw = self.tmpfile.buffer.read()
         self.tmpfile.seek(0)
         self.tmpfile.truncate()
-        return res
+        return raw.decode('utf-8', errors='replace')
 
     def writeorg(self, data):
         """ write to original file descriptor. """
diff --git a/test_capfd.py b/test_capfd.py
new file mode 100644
index 000000000..7b2fd02a0
--- /dev/null
+++ b/test_capfd.py
@@ -0,0 +1,5 @@
+
+def test_cafd_includes_carriage_return(capfd):
+    print('Greetings from DOS', end='\r')
+    out, err = capfd.readouterr()
+    assert out.endswith('\r')
\ No newline at end of file
diff --git a/test_capfd_edge_cases.py b/test_capfd_edge_cases.py
new file mode 100644
index 000000000..7d93a9d23
--- /dev/null
+++ b/test_capfd_edge_cases.py
@@ -0,0 +1,10 @@
+
+def test_capfd_multiple_carriage_returns(capfd):
+    print('Line 1\rLine 2\rLine 3', end='\r')
+    out, err = capfd.readouterr()
+    assert out == 'Line 1\rLine 2\rLine 3\r'
+
+def test_capfd_mixed_line_endings(capfd):
+    print('Line 1\rLine 2\nLine 3\r\nLine 4', end='\r')
+    out, err = capfd.readouterr()
+    assert out == 'Line 1\rLine 2\nLine 3\r\nLine 4\r'
\ No newline at end of file
