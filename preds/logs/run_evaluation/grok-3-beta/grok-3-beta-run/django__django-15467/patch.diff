diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py
index 64be087bf1..8ade1b89d3 100644
--- a/django/contrib/admin/options.py
+++ b/django/contrib/admin/options.py
@@ -269,7 +269,7 @@ class BaseModelAdmin(metaclass=forms.MediaDefiningClass):
                         "class": get_ul_class(self.radio_fields[db_field.name]),
                     }
                 )
-                kwargs["empty_label"] = _("None") if db_field.blank else None
+                kwargs["empty_label"] = kwargs.get("empty_label", _("None")) if db_field.blank else None
 
         if "queryset" not in kwargs:
             queryset = self.get_field_queryset(db, db_field, request)
diff --git a/test_admin_empty_label.py b/test_admin_empty_label.py
new file mode 100644
index 0000000000..7ccc394ba8
--- /dev/null
+++ b/test_admin_empty_label.py
@@ -0,0 +1,33 @@
+
+# Simulated test for ModelAdmin empty_label behavior
+
+# Mocking necessary components
+class MockField:
+    def __init__(self, name, blank=False):
+        self.name = name
+        self.blank = blank
+
+    def formfield(self, **kwargs):
+        return MockFormField(kwargs.get('empty_label'))
+
+class MockFormField:
+    def __init__(self, empty_label):
+        self.empty_label = empty_label
+
+class MockModelAdmin:
+    def __init__(self):
+        self.radio_fields = {'myfield': 'vertical'}
+
+    def formfield_for_foreignkey(self, db_field, request=None, **kwargs):
+        if db_field.name == 'myfield':
+            kwargs['empty_label'] = "I WANT TO SET MY OWN EMPTY LABEL"
+        if db_field.name in self.radio_fields:
+            kwargs['empty_label'] = kwargs.get('empty_label', 'None') if db_field.blank else None
+        return db_field.formfield(**kwargs)
+
+# Test the behavior
+admin = MockModelAdmin()
+field = MockField('myfield', blank=True)
+form_field = admin.formfield_for_foreignkey(field)
+print(f"Empty label: {form_field.empty_label}")
+print("Script completed successfully, no errors.")
\ No newline at end of file
