diff --git a/lib/matplotlib/offsetbox.py b/lib/matplotlib/offsetbox.py
index 3a506543ac..a1a54cca31 100644
--- a/lib/matplotlib/offsetbox.py
+++ b/lib/matplotlib/offsetbox.py
@@ -475,9 +475,11 @@ class HPacker(PackerBase):
             return 2 * pad, 2 * pad, pad, pad, []
 
         hd_list = [(h, yd) for w, h, xd, yd in whd_list]
+                # Reverse align for top and bottom in HPacker to fix alignment issue
+        align = 'top' if self.align == 'bottom' else 'bottom' if self.align == 'top' else self.align
         height, ydescent, yoffsets = _get_aligned_offsets(hd_list,
                                                           self.height,
-                                                          self.align)
+                                                          align)
 
         pack_list = [w for w, h, xd, yd in whd_list]
         width, xoffsets_ = _get_packed_offsets(pack_list, self.width,
diff --git a/reproduce_align_bug.py b/reproduce_align_bug.py
new file mode 100644
index 0000000000..4b9685fe8f
--- /dev/null
+++ b/reproduce_align_bug.py
@@ -0,0 +1,25 @@
+
+import matplotlib.pyplot as plt
+from matplotlib.offsetbox import DrawingArea, HPacker, VPacker, AnchoredOffsetbox, TextArea
+from matplotlib.patches import Rectangle
+
+da1 = DrawingArea(10, 20)
+rect1 = Rectangle((0, 0), 10, 20)
+da1.add_artist(rect1)
+
+da2 = DrawingArea(10, 30)
+rect2 = Rectangle((0, 0), 10, 30)
+da2.add_artist(rect2)
+
+align = "bottom"
+
+pack = HPacker(children=[da1, da2], pad=10, sep=10, align=align)
+title = TextArea(f"align='{align}'")
+pack = VPacker(children=[title, pack], sep=10, pad=10, align="center")
+
+box = AnchoredOffsetbox(child=pack, loc="center")
+
+_, ax = plt.subplots()
+ax.add_artist(box)
+
+plt.show()
\ No newline at end of file
