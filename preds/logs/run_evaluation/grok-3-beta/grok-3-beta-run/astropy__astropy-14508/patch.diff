diff --git a/astropy/io/fits/card.py b/astropy/io/fits/card.py
index 118bfced89..d7683d2fa8 100644
--- a/astropy/io/fits/card.py
+++ b/astropy/io/fits/card.py
@@ -1299,6 +1299,13 @@ def _format_value(value):
 
 def _format_float(value):
     """Format a floating number to make sure it gets the decimal point."""
+    # First try the natural string representation
+    value_str = str(value)
+    if len(value_str) <= 20:
+        if '.' not in value_str and 'e' not in value_str.lower():
+            value_str += '.0'
+        return value_str
+    # If too long, fall back to the formatted version
     value_str = f"{value:.16G}"
     if "." not in value_str and "E" not in value_str:
         value_str += ".0"
diff --git a/reproduce_card_issue.py b/reproduce_card_issue.py
new file mode 100644
index 0000000000..92cac7c729
--- /dev/null
+++ b/reproduce_card_issue.py
@@ -0,0 +1,13 @@
+
+from astropy.io import fits
+
+# Create a card with a specific float value and comment
+keyword = 'HIERARCH ESO IFM CL RADIUS'
+value = 0.009125
+comment = '[m] radius arround actuator to avoid'
+
+new_c = fits.Card(keyword, value, comment)
+print('Representation of the new card:')
+print(repr(new_c))
+print('\nString format of the new card:')
+print(str(new_c))
\ No newline at end of file
diff --git a/test_card_edge_cases.py b/test_card_edge_cases.py
new file mode 100644
index 0000000000..8f5d510f61
--- /dev/null
+++ b/test_card_edge_cases.py
@@ -0,0 +1,27 @@
+
+from astropy.io import fits
+
+# Test various edge cases for float values in FITS cards
+keywords = [
+    'HIERARCH TEST SMALL',
+    'HIERARCH TEST LARGE',
+    'HIERARCH TEST PRECISE'
+]
+values = [
+    1e-10,  # Very small number
+    1e10,   # Very large number
+    0.1234567890123456  # High precision number
+]
+comments = [
+    '[m] very small value test comment',
+    '[m] very large value test comment',
+    '[m] high precision value test comment'
+]
+
+for kw, val, comm in zip(keywords, values, comments):
+    card = fits.Card(kw, val, comm)
+    print(f'Representation of card for {kw}:')
+    print(repr(card))
+    print(f'String format of card for {kw}:')
+    print(str(card))
+    print('')
\ No newline at end of file
