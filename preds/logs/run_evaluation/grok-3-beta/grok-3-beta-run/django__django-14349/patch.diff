diff --git a/django/core/validators.py b/django/core/validators.py
index a385819510..3db5ef5ba2 100644
--- a/django/core/validators.py
+++ b/django/core/validators.py
@@ -101,6 +101,9 @@ class URLValidator(RegexValidator):
     def __call__(self, value):
         if not isinstance(value, str):
             raise ValidationError(self.message, code=self.code, params={'value': value})
+        # Check for forbidden characters like newline and tab which may be stripped by Python's URL parsing
+        if any(char in value for char in "\n\r\t"):
+            raise ValidationError(self.message, code=self.code, params={'value': value})
         # Check if the scheme is valid.
         scheme = value.split('://')[0].lower()
         if scheme not in self.schemes:
diff --git a/test_url_validator.py b/test_url_validator.py
new file mode 100644
index 0000000000..f03feb8287
--- /dev/null
+++ b/test_url_validator.py
@@ -0,0 +1,20 @@
+
+from django.core.validators import URLValidator, ValidationError
+
+try:
+    validator = URLValidator()
+    # Test URLs with newline characters
+    test_urls = [
+        'http://www.djangoproject.com/\n',
+        'http://[::ffff:192.9.5.5]\n'
+    ]
+    for url in test_urls:
+        try:
+            validator(url)
+            print(f"Failed: {url} did not raise ValidationError")
+        except ValidationError as e:
+            print(f"Success: {url} raised ValidationError as expected")
+except Exception as e:
+    print(f"Unexpected error: {e}")
+
+print("Test completed.")
\ No newline at end of file
