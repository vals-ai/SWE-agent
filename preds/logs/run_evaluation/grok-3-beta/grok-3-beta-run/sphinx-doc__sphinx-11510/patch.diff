diff --git a/sphinx_test/conf.py b/sphinx_test/conf.py
new file mode 100644
index 000000000..0b43a75a2
--- /dev/null
+++ b/sphinx_test/conf.py
@@ -0,0 +1,9 @@
+
+import sys
+import os
+
+sys.path.insert(0, os.path.abspath('.'))
+
+extensions = [
+        'my-extension'
+]
\ No newline at end of file
diff --git a/sphinx_test/index.rst b/sphinx_test/index.rst
new file mode 100644
index 000000000..4603f7b79
--- /dev/null
+++ b/sphinx_test/index.rst
@@ -0,0 +1,7 @@
+
+This is a test
+==============
+
+.. include:: something-to-include.rst
+
+&REPLACE_ME;
\ No newline at end of file
diff --git a/sphinx_test/my-extension.py b/sphinx_test/my-extension.py
new file mode 100644
index 000000000..831177fd1
--- /dev/null
+++ b/sphinx_test/my-extension.py
@@ -0,0 +1,30 @@
+
+#!/usr/bin/env python3
+
+from sphinx.application import Sphinx
+
+
+__version__ = '1.0'
+
+
+def subst_vars_replace(app: Sphinx, docname, doctree):
+    from docutils import nodes
+    print(f"Processing doctree for {docname}")
+    for node in doctree.traverse(nodes.Text):
+        text = node.astext()
+        if "&amp;REPLACE_ME;" in text:
+            print(f"Found '&REPLACE_ME;' in node: {text}")
+            new_text = text.replace("&amp;REPLACE_ME;", "REPLACED")
+            node.parent.replace(node, nodes.Text(new_text))
+            print(f"Replaced with: {new_text}")
+
+
+def setup(app: Sphinx):
+
+    app.connect('doctree-read', subst_vars_replace)
+
+    return dict(
+        version=__version__,
+        parallel_read_safe=True,
+        parallel_write_safe=True
+    )
\ No newline at end of file
diff --git a/sphinx_test/something-to-include.rst b/sphinx_test/something-to-include.rst
new file mode 100644
index 000000000..a8ac603be
--- /dev/null
+++ b/sphinx_test/something-to-include.rst
@@ -0,0 +1,5 @@
+
+Testing
+=======
+
+&REPLACE_ME;
\ No newline at end of file
