diff --git a/django/db/models/base.py b/django/db/models/base.py
index e3b14a41a0..55dc1018d4 100644
--- a/django/db/models/base.py
+++ b/django/db/models/base.py
@@ -847,12 +847,14 @@ class Model(metaclass=ModelBase):
         if not pk_set and (force_update or update_fields):
             raise ValueError("Cannot force an update in save() with no primary key.")
         updated = False
-        # Skip an UPDATE when adding an instance and primary key has a default.
+        # Skip an UPDATE when adding an instance and primary key has a default,
+        # but only if the primary key value is not explicitly set.
         if (
             not force_insert and
             self._state.adding and
             self._meta.pk.default and
-            self._meta.pk.default is not NOT_PROVIDED
+            self._meta.pk.default is not NOT_PROVIDED and
+            pk_val is None
         ):
             force_insert = True
         # If possible, try an UPDATE. If that doesn't update anything, do an INSERT.
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..a924ded670
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,22 @@
+
+import os
+import django
+from uuid import uuid4
+from django.db import models
+
+# Configure Django settings
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'test_project.settings')
+django.setup()
+
+class Sample(models.Model):
+    id = models.UUIDField(primary_key=True, default=uuid4)
+    name = models.CharField(blank=True, max_length=100)
+
+# Create an initial instance
+s0 = Sample.objects.create()
+
+# Create another instance with the same pk and different name
+s1 = Sample(pk=s0.pk, name='Test 1')
+s1.save()
+
+print('Script completed successfully, no errors.')
\ No newline at end of file
