diff --git a/django/forms/models.py b/django/forms/models.py
index dafc11f995..d32636e49e 100644
--- a/django/forms/models.py
+++ b/django/forms/models.py
@@ -1185,8 +1185,11 @@ class ModelChoiceField(ChoiceField):
                  required=True, widget=None, label=None, initial=None,
                  help_text='', to_field_name=None, limit_choices_to=None,
                  **kwargs):
+        from django.forms.widgets import RadioSelect
         if required and (initial is not None):
             self.empty_label = None
+        elif isinstance(widget, RadioSelect) and hasattr(self, 'field') and not getattr(self.field, 'blank', True):
+            self.empty_label = None
         else:
             self.empty_label = empty_label
 
diff --git a/django/forms/widgets.py b/django/forms/widgets.py
index 40ac1d3162..68d47719d3 100644
--- a/django/forms/widgets.py
+++ b/django/forms/widgets.py
@@ -604,6 +604,9 @@ class ChoiceWidget(Widget):
                     str(subvalue) in value and
                     (not has_selected or self.allow_multiple_selected)
                 )
+                # For RadioSelect, do not select blank option by default if no value is provided
+                if isinstance(self, RadioSelect) and len(value) == 1 and value[0] == '' and str(subvalue) == '':
+                    selected = False
                 has_selected |= selected
                 subgroup.append(self.create_option(
                     name, subvalue, sublabel, selected, index,
