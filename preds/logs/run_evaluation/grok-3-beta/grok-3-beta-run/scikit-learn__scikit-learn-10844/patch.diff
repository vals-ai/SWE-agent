diff --git a/sklearn/metrics/cluster/supervised.py b/sklearn/metrics/cluster/supervised.py
index a987778ae..9bcca75a2 100644
--- a/sklearn/metrics/cluster/supervised.py
+++ b/sklearn/metrics/cluster/supervised.py
@@ -856,7 +856,7 @@ def fowlkes_mallows_score(labels_true, labels_pred, sparse=False):
     tk = np.dot(c.data, c.data) - n_samples
     pk = np.sum(np.asarray(c.sum(axis=0)).ravel() ** 2) - n_samples
     qk = np.sum(np.asarray(c.sum(axis=1)).ravel() ** 2) - n_samples
-    return tk / np.sqrt(pk * qk) if tk != 0. else 0.
+    return np.sqrt(tk / pk) * np.sqrt(tk / qk) if tk != 0. else 0.
 
 
 def entropy(labels):
diff --git a/test_fowlkes_mallows.py b/test_fowlkes_mallows.py
new file mode 100644
index 000000000..878950bd7
--- /dev/null
+++ b/test_fowlkes_mallows.py
@@ -0,0 +1,18 @@
+
+import numpy as np
+from sklearn.metrics.cluster import fowlkes_mallows_score
+
+# Create large cluster labels to induce overflow
+n_samples = 100000
+labels_true = np.zeros(n_samples, dtype=int)
+labels_pred = np.zeros(n_samples, dtype=int)
+
+# Assign half of the samples to cluster 1 in true labels
+labels_true[n_samples//2:] = 1
+# Assign half of the samples to cluster 1 in predicted labels
+labels_pred[n_samples//2:] = 1
+
+# Calculate Fowlkes-Mallows score
+score = fowlkes_mallows_score(labels_true, labels_pred)
+print(f'Fowlkes-Mallows Score: {score}')
+print('Script completed successfully, no errors.')
\ No newline at end of file
