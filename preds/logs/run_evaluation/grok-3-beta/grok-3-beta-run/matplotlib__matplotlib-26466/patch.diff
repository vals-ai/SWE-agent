diff --git a/lib/matplotlib/text.py b/lib/matplotlib/text.py
index d4922fc517..abac84397d 100644
--- a/lib/matplotlib/text.py
+++ b/lib/matplotlib/text.py
@@ -1456,7 +1456,7 @@ class _AnnotationBase:
                  xycoords='data',
                  annotation_clip=None):
 
-        self.xy = xy
+        self.xy = np.array(xy, copy=True)
         self.xycoords = xycoords
         self.set_annotation_clip(annotation_clip)
 
@@ -1830,7 +1830,7 @@ or callable, default: value of *xycoords*
         # cleanup xytext defaults
         if xytext is None:
             xytext = self.xy
-        x, y = xytext
+        x, y = np.array(xytext, copy=True)
 
         self.arrowprops = arrowprops
         if arrowprops is not None:
diff --git a/output.png b/output.png
new file mode 100644
index 0000000000..d1d9aeea4c
Binary files /dev/null and b/output.png differ
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..ec5da03e7d
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,24 @@
+
+import matplotlib.pyplot as plt
+import numpy as np
+
+fig = plt.figure("test")
+
+ax = fig.add_axes([0.13, 0.15, .8, .8])
+ax.set_xlim(-5, 5)
+ax.set_ylim(-3, 3)
+
+xy_0 = np.array((-4, 1))
+xy_f = np.array((-1, 1))
+# this annotation is messed by later changing the array passed as xy kwarg
+ax.annotate(text='', xy=xy_0, xytext=xy_f, arrowprops=dict(arrowstyle='<->'))
+xy_0[1] = 3  # <--this updates the arrow position
+
+xy_0 = np.array((1, 1))
+xy_f = np.array((4, 1))
+# using a copy of the array helps spotting where the problem is
+ax.annotate(text='', xy=xy_0.copy(), xytext=xy_f, arrowprops=dict(arrowstyle='<->'))
+xy_0[1] = 3
+
+plt.savefig('output.png')
+print("Script completed successfully, no errors.")
\ No newline at end of file
diff --git a/test_annotations.py b/test_annotations.py
new file mode 100644
index 0000000000..cac8543358
--- /dev/null
+++ b/test_annotations.py
@@ -0,0 +1,31 @@
+
+import matplotlib.pyplot as plt
+import numpy as np
+
+# Test with different input types for xy and xytext
+fig = plt.figure("test_types")
+
+ax = fig.add_axes([0.13, 0.15, .8, .8])
+ax.set_xlim(-5, 5)
+ax.set_ylim(-3, 3)
+
+# Test with numpy array
+xy_0_np = np.array((-4, 1))
+xy_f_np = np.array((-1, 1))
+ax.annotate(text='', xy=xy_0_np, xytext=xy_f_np, arrowprops=dict(arrowstyle='<->'))
+xy_0_np[1] = 3  # Should not affect the arrow
+
+# Test with list
+xy_0_list = [-2, 1]
+xy_f_list = [1, 1]
+ax.annotate(text='', xy=xy_0_list, xytext=xy_f_list, arrowprops=dict(arrowstyle='<->'))
+xy_0_list[1] = 3  # Should not affect the arrow
+
+# Test with tuple
+xy_0_tuple = (-4, -1)
+xy_f_tuple = (-1, -1)
+ax.annotate(text='', xy=xy_0_tuple, xytext=xy_f_tuple, arrowprops=dict(arrowstyle='<->'))
+# Cannot modify tuple, so no change test needed
+
+plt.savefig('test_output.png')
+print("Test script completed successfully, no errors.")
\ No newline at end of file
diff --git a/test_output.png b/test_output.png
new file mode 100644
index 0000000000..f467db637e
Binary files /dev/null and b/test_output.png differ
