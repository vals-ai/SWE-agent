diff --git a/astropy/utils/misc.py b/astropy/utils/misc.py
index de3fb01d18..cceaeb957f 100644
--- a/astropy/utils/misc.py
+++ b/astropy/utils/misc.py
@@ -528,7 +528,7 @@ class InheritDocstrings(type):
                 not key.startswith('_'))
 
         for key, val in dct.items():
-            if (inspect.isfunction(val) and
+            if ((inspect.isfunction(val) or isinstance(val, property)) and
                 is_public_member(key) and
                 val.__doc__ is None):
                 for base in cls.__mro__[1:]:
diff --git a/test_inherit_docstrings.py b/test_inherit_docstrings.py
new file mode 100644
index 0000000000..fd3f5ef7e8
--- /dev/null
+++ b/test_inherit_docstrings.py
@@ -0,0 +1,23 @@
+
+from astropy.utils.misc import InheritDocstrings
+
+# Define a base class with a property and a docstring
+class BaseClass:
+    @property
+    def my_property(self):
+        """This is the docstring for my_property."""
+        return 42
+
+# Define a derived class using InheritDocstrings metaclass
+class DerivedClass(BaseClass, metaclass=InheritDocstrings):
+    @property
+    def my_property(self):
+        return 84
+
+# Check if the docstring is inherited
+print(DerivedClass.my_property.__doc__)
+
+if DerivedClass.my_property.__doc__ == "This is the docstring for my_property.":
+    print("Test passed: Docstring inherited correctly for property.")
+else:
+    print("Test failed: Docstring not inherited for property.")
\ No newline at end of file
