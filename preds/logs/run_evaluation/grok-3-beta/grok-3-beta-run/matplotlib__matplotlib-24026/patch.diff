diff --git a/lib/matplotlib/stackplot.py b/lib/matplotlib/stackplot.py
index c580043eeb..7dbc44de1a 100644
--- a/lib/matplotlib/stackplot.py
+++ b/lib/matplotlib/stackplot.py
@@ -70,7 +70,22 @@ def stackplot(axes, x, *args,
 
     labels = iter(labels)
     if colors is not None:
-        axes.set_prop_cycle(color=colors)
+        # Resolve color cycle references (e.g., 'C0', 'C1') to actual colors
+        resolved_colors = []
+        for c in colors:
+            if isinstance(c, str) and c.startswith('C'):
+                try:
+                    idx = int(c[1:])
+                    # Get the color cycle
+                    color_cycle = axes._get_lines.prop_cycler
+                    # Create a list of colors from the cycle up to the needed index
+                    colors_from_cycle = [next(color_cycle)['color'] for _ in range(idx + 1)]
+                    resolved_colors.append(colors_from_cycle[idx])
+                except (ValueError, IndexError):
+                    resolved_colors.append(c)  # Fallback to original if parsing fails
+            else:
+                resolved_colors.append(c)
+        axes.set_prop_cycle(color=resolved_colors)
 
     # Assume data passed has not been 'stacked', so stack it here.
     # We'll need a float buffer for the upcoming calculations.
diff --git a/reproduce_stackplot_error.py b/reproduce_stackplot_error.py
new file mode 100644
index 0000000000..91cecfd31b
--- /dev/null
+++ b/reproduce_stackplot_error.py
@@ -0,0 +1,11 @@
+
+import matplotlib.pyplot as plt
+from matplotlib.patches import Rectangle
+import numpy
+
+my_data = numpy.array([[1, 1, 1], [1, 2, 3], [4, 3, 2]])
+fig, ax = plt.subplots()
+ax.plot([1, 3], [1, 3], color='C0')
+ax.add_patch(Rectangle(xy=(1.5, 1.5), width=0.5, height=0.5, facecolor='C1'))
+ax.stackplot([1, 2, 3], my_data, colors=['C2', 'C3', 'C4'])
+plt.show()
\ No newline at end of file
diff --git a/test_stackplot_colors.py b/test_stackplot_colors.py
new file mode 100644
index 0000000000..933d87475f
--- /dev/null
+++ b/test_stackplot_colors.py
@@ -0,0 +1,19 @@
+
+import matplotlib.pyplot as plt
+import numpy as np
+
+# Create data for stackplot
+x = [1, 2, 3]
+y_data = np.array([[1, 1, 1], [1, 2, 3], [4, 3, 2]])
+
+# Create figure and axis
+fig, ax = plt.subplots()
+
+# Use stackplot with color cycle references
+ax.stackplot(x, y_data, colors=['C0', 'C1', 'C2'])
+
+# Print a message to confirm successful execution
+print('Stackplot created successfully with color cycle references.')
+
+# Normally we would show the plot, but since we can't display it here, just close it
+plt.close()
\ No newline at end of file
