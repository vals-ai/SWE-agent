diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py
index e15e64cde4..bae85adb7e 100644
--- a/django/db/models/sql/query.py
+++ b/django/db/models/sql/query.py
@@ -2216,10 +2216,14 @@ def get_order_dir(field, default='ASC'):
 
     The 'default' param is used to indicate which way no prefix (or a '+'
     prefix) should sort. The '-' prefix always sorts the opposite way.
+    Handles OrderBy expressions by checking for descending attribute.
     """
     dirn = ORDER_DIR[default]
-    if field[0] == '-':
-        return field[1:], dirn[1]
+    if hasattr(field, 'descending'):
+        return field.expression, 'DESC' if field.descending else 'ASC'
+    elif isinstance(field, str):
+        if field and field[0] == '-':
+            return field[1:], dirn[1]
     return field, dirn[0]
 
 
diff --git a/reproduce_ordering_bug.py b/reproduce_ordering_bug.py
new file mode 100644
index 0000000000..bc8d795bac
--- /dev/null
+++ b/reproduce_ordering_bug.py
@@ -0,0 +1,22 @@
+
+from django.db import models
+from django.db.models import F
+
+# Parent model with ordering by expression
+class Parent(models.Model):
+    name = models.CharField(max_length=100)
+    value = models.IntegerField()
+
+    class Meta:
+        ordering = [F('value').desc()]
+
+# Child model inheriting from Parent
+class Child(Parent):
+    extra_field = models.CharField(max_length=100)
+
+# This should trigger the bug during queryset operations like order_by
+try:
+    Child.objects.order_by('name')
+    print('Script completed successfully, no errors.')
+except Exception as e:
+    print(f'Error occurred: {e}')
\ No newline at end of file
