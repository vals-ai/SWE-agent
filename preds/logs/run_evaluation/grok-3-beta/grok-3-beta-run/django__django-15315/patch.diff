diff --git a/additional_test.py b/additional_test.py
new file mode 100644
index 0000000000..30cc38ae5b
--- /dev/null
+++ b/additional_test.py
@@ -0,0 +1,36 @@
+
+import django
+from django.conf import settings
+
+settings.configure(
+    INSTALLED_APPS=['django.contrib.contenttypes']
+)
+django.setup()
+
+from django.db import models
+
+# Test multiple fields
+f1 = models.CharField(max_length=200)
+f2 = models.IntegerField()
+d = {f1: 1, f2: 2}
+
+class Book(models.Model):
+    title = f1
+    pages = f2
+    class Meta:
+        app_label = 'test_app'
+
+assert f1 in d, 'Field f1 hash changed after model assignment'
+assert f2 in d, 'Field f2 hash changed after model assignment'
+
+# Test reassignment to another model
+class Magazine(models.Model):
+    name = f1
+    issue = f2
+    class Meta:
+        app_label = 'test_app'
+
+assert f1 in d, 'Field f1 hash changed after reassignment to another model'
+assert f2 in d, 'Field f2 hash changed after reassignment to another model'
+
+print('Additional tests completed successfully, no errors.')
\ No newline at end of file
diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py
index 88c9ca9f28..fcea1597ef 100644
--- a/django/db/models/fields/__init__.py
+++ b/django/db/models/fields/__init__.py
@@ -542,11 +542,7 @@ class Field(RegisterLookupMixin):
         return NotImplemented
 
     def __hash__(self):
-        return hash((
-            self.creation_counter,
-            self.model._meta.app_label if hasattr(self, 'model') else None,
-            self.model._meta.model_name if hasattr(self, 'model') else None,
-        ))
+        return hash(self.creation_counter)
 
     def __deepcopy__(self, memodict):
         # We don't have to deepcopy very much here, since most things are not
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..e374ea4124
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,21 @@
+
+import django
+from django.conf import settings
+
+settings.configure(
+    INSTALLED_APPS=['django.contrib.contenttypes']
+)
+django.setup()
+
+from django.db import models
+
+f = models.CharField(max_length=200)
+d = {f: 1}
+
+class Book(models.Model):
+    title = f
+    class Meta:
+        app_label = 'test_app'
+
+assert f in d
+print('Script completed successfully, no errors.')
\ No newline at end of file
