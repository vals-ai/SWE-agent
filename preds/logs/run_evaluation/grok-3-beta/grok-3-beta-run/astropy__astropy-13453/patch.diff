diff --git a/astropy/io/ascii/html.py b/astropy/io/ascii/html.py
index 266cf229cc..adf7bebafa 100644
--- a/astropy/io/ascii/html.py
+++ b/astropy/io/ascii/html.py
@@ -437,7 +437,21 @@ class HTML(core.BaseReader):
                                     new_cols.append(new_col)
                             else:
 
-                                col_iter_str_vals = self.fill_values(col, col.info.iter_str_vals())
+                                # Check if there is a custom format function for this column in self.data.formats
+                                format_func = None
+                                if hasattr(self.data, 'formats') and col.info.name in self.data.formats:
+                                    format_spec = self.data.formats[col.info.name]
+                                    if callable(format_spec):
+                                        format_func = format_spec
+                                    elif isinstance(format_spec, str):
+                                        format_func = lambda x: format_spec % x if isinstance(x, (int, float)) else str(x)
+                                    else:
+                                        format_func = lambda x: str(x)
+                                if format_func:
+                                    formatted_vals = [format_func(val) for val in col]
+                                    col_iter_str_vals = self.fill_values(col, formatted_vals)
+                                else:
+                                    col_iter_str_vals = self.fill_values(col, col.info.iter_str_vals())
                                 col_str_iters.append(col_iter_str_vals)
 
                                 new_cols_escaped.append(col_escaped)
diff --git a/reproduce_html_format_issue.py b/reproduce_html_format_issue.py
new file mode 100644
index 0000000000..47cb55a114
--- /dev/null
+++ b/reproduce_html_format_issue.py
@@ -0,0 +1,18 @@
+
+from astropy.table import Table
+from io import StringIO
+
+# generate table
+t = Table([(1.23875234858e-24, 3.2348748432e-15), (2, 4)], names=('a', 'b'))
+tc = t.copy()  # copy table
+
+# print HTML table with "a" column formatted to show 2 decimal places
+with StringIO() as sp:
+    tc.write(sp, format="html", formats={"a": lambda x: f"{x:.2e}"})
+    print(sp.getvalue())
+
+# print CSV table to compare
+with StringIO() as sp:
+    tc.write(sp, format="csv", formats={"a": lambda x: f"{x:.2e}"})
+    print("\nCSV Output:")
+    print(sp.getvalue())
\ No newline at end of file
