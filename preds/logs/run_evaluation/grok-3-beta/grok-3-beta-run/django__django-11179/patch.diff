diff --git a/django/db/models/deletion.py b/django/db/models/deletion.py
index 92fe4affb9..aa9fc27896 100644
--- a/django/db/models/deletion.py
+++ b/django/db/models/deletion.py
@@ -277,6 +277,7 @@ class Collector:
             if self.can_fast_delete(instance):
                 with transaction.mark_for_rollback_on_error():
                     count = sql.DeleteQuery(model).delete_batch([instance.pk], self.using)
+                    setattr(instance, model._meta.pk.attname, None)
                 return count, {model._meta.label: count}
 
         with transaction.atomic(using=self.using, savepoint=False):
diff --git a/test_delete_pk.py b/test_delete_pk.py
new file mode 100644
index 0000000000..7d0ef3c6a0
--- /dev/null
+++ b/test_delete_pk.py
@@ -0,0 +1,24 @@
+
+from django.db import models
+
+# Define a simple model for testing
+class TestModel(models.Model):
+    name = models.CharField(max_length=100)
+
+# Create an instance
+instance = TestModel(name='Test')
+instance.save()
+
+# Store the original PK
+original_pk = instance.pk
+
+# Delete the instance
+instance.delete()
+
+# Check if PK is None after deletion
+if instance.pk is None:
+    print('Success: PK is None after deletion')
+else:
+    print(f'Failure: PK is still {instance.pk} after deletion')
+
+print('Script completed successfully, no errors.')
\ No newline at end of file
