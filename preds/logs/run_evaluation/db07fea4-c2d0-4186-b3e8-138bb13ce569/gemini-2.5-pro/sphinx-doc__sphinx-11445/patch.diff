diff --git a/sphinx/util/rst.py b/sphinx/util/rst.py
index 7a1538325..500c96a04 100644
--- a/sphinx/util/rst.py
+++ b/sphinx/util/rst.py
@@ -79,10 +79,21 @@ def prepend_prolog(content: StringList, prolog: str) -> None:
     """Prepend a string to content body as prolog."""
     if prolog:
         pos = 0
-        for line in content:
+        # Find the end of the docinfo block
+        while pos < len(content):
+            line = content[pos]
             if docinfo_re.match(line):
+                # Check if this line is potentially a title
+                if pos + 1 < len(content):
+                    next_line = content[pos + 1].strip()
+                    # Check if next line is a valid underline
+                    if len(next_line) > 0 and all(c in SECTIONING_CHARS for c in next_line):
+                        # If the line matching docinfo_re is followed by an underline, assume it's a title and stop.
+                        break # Found title, stop before it
+                # It's a docinfo line, not a title start
                 pos += 1
             else:
+                # Not a docinfo line, stop
                 break
 
         if pos > 0:
@@ -94,7 +105,12 @@ def prepend_prolog(content: StringList, prolog: str) -> None:
         for lineno, line in enumerate(prolog.splitlines()):
             content.insert(pos + lineno, line, '<rst_prolog>', lineno)
 
-        content.insert(pos + lineno + 1, '', '<generated>', 0)
+        # Add a blank line after the prolog, unless it's directly followed by a title underline
+        prolog_end_pos = pos + lineno + 1
+        if prolog_end_pos >= len(content) or \
+           not (len(content[prolog_end_pos].strip()) > 0 and
+                all(c in SECTIONING_CHARS for c in content[prolog_end_pos].strip())):
+            content.insert(prolog_end_pos, '', '<generated>', 0)
 
 
 def append_epilog(content: StringList, epilog: str) -> None:
