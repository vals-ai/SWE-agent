diff --git a/django/db/migrations/operations/fields.py b/django/db/migrations/operations/fields.py
index cd3aab43ad..640133dce1 100644
--- a/django/db/migrations/operations/fields.py
+++ b/django/db/migrations/operations/fields.py
@@ -247,10 +247,18 @@ class AlterField(FieldOperation):
         return "alter_%s_%s" % (self.model_name_lower, self.name_lower)
 
     def reduce(self, operation, app_label):
-        if isinstance(operation, RemoveField) and self.is_same_field_operation(
+        # Check if the operation is another AlterField on the same field
+        if isinstance(operation, AlterField) and self.is_same_field_operation(
             operation
         ):
+            # The later AlterField overrides this one
             return [operation]
+        # Check if the operation is a RemoveField on the same field
+        elif isinstance(operation, RemoveField) and self.is_same_field_operation(
+            operation
+        ):
+            return [operation]
+        # Check if the operation is a RenameField on the same field
         elif (
             isinstance(operation, RenameField)
             and self.is_same_field_operation(operation)
diff --git a/tests/migrations/test_optimizer.py b/tests/migrations/test_optimizer.py
index 6485009eb4..f284fb650c 100644
--- a/tests/migrations/test_optimizer.py
+++ b/tests/migrations/test_optimizer.py
@@ -259,6 +259,27 @@ class OptimizerTests(SimpleTestCase):
             migrations.AlterOrderWithRespectTo("Foo", "a"),
             migrations.AlterOrderWithRespectTo("Foo", "b"),
         )
+    def test_alter_alter_field(self):
+        """
+        Two AlterField operations on the same field should collapse into the
+        second.
+        """
+        self.assertOptimizesTo(
+            [
+                migrations.AlterField(
+                    "Foo", "a", models.IntegerField(null=True)
+                ),
+                migrations.AlterField(
+                    "Foo", "a", models.IntegerField(null=True, default=1)
+                ),
+            ],
+            [
+                migrations.AlterField(
+                    "Foo", "a", models.IntegerField(null=True, default=1)
+                ),
+            ],
+        )
+
 
     def test_optimize_through_create(self):
         """
