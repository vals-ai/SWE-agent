diff --git a/xarray/core/merge.py b/xarray/core/merge.py
index ca4e29b6..dff00804 100644
--- a/xarray/core/merge.py
+++ b/xarray/core/merge.py
@@ -501,7 +501,7 @@ def merge_attrs(variable_attrs, combine_attrs):
     if combine_attrs == "drop":
         return {}
     elif combine_attrs == "override":
-        return variable_attrs[0]
+        return dict(variable_attrs[0])
     elif combine_attrs == "no_conflicts":
         result = dict(variable_attrs[0])
         for attrs in variable_attrs[1:]:
diff --git a/xarray/tests/test_merge.py b/xarray/tests/test_merge.py
index 0994ed9a..64f30526 100644
--- a/xarray/tests/test_merge.py
+++ b/xarray/tests/test_merge.py
@@ -321,6 +321,32 @@ class TestMergeMethod:
             ds3 = xr.Dataset({"a": ("y", [2, 3]), "y": [1, 2]})
             ds1.merge(ds3, compat="no_conflicts")
 
+    def test_merge_combine_attrs_override_mutability(self):
+        """Test that combine_attrs='override' creates a copy, not a view."""
+        xds1 = xr.Dataset(attrs={'a': 'b', 'unchanged': 'original'})
+        xds2 = xr.Dataset(attrs={'a': 'c'})
+
+        # Merge with override
+        xds3 = xr.merge([xds1, xds2], combine_attrs='override')
+
+        # Check initial state
+        assert xds1.attrs['a'] == 'b'
+        assert xds3.attrs['a'] == 'b'  # 'override' takes from the first dataset
+        assert xds1.attrs['unchanged'] == 'original'
+        assert xds3.attrs['unchanged'] == 'original'
+
+        # Modify the merged dataset's attributes
+        xds3.attrs['a'] = 'd'
+        xds3.attrs['new'] = 'added'
+
+        # Check if the original dataset's attributes were modified
+        assert xds1.attrs['a'] == 'b', "Original dataset's attr was modified"
+        assert 'new' not in xds1.attrs, "New attr appeared in original dataset"
+
+        # Check the merged dataset's attributes
+        assert xds3.attrs['a'] == 'd'
+        assert xds3.attrs['new'] == 'added'
+
     def test_merge_dataarray(self):
         ds = xr.Dataset({"a": 0})
         da = xr.DataArray(data=1, name="b")
