diff --git a/sklearn/feature_extraction/tests/test_text.py b/sklearn/feature_extraction/tests/test_text.py
index 7b7697ff4..b94daafed 100644
--- a/sklearn/feature_extraction/tests/test_text.py
+++ b/sklearn/feature_extraction/tests/test_text.py
@@ -95,7 +95,15 @@ def test_strip_accents():
     # mix letters accentuated and not
     a = "this is Ã  test"
     expected = 'this is a test'
-    assert strip_accents_unicode(a) == expected
+
+    # Test strings already in NFKD form
+    # s1: "LATIN SMALL LETTER N WITH TILDE" (NFC)
+    s1 = chr(241)
+    # s2: "LATIN SMALL LETTER N" + "COMBINING TILDE" (NFKD)
+    s2 = chr(110) + chr(771)
+    expected = 'n'
+    assert strip_accents_unicode(s1) == expected
+    assert strip_accents_unicode(s2) == expected
 
 
 def test_to_ascii():
diff --git a/sklearn/feature_extraction/text.py b/sklearn/feature_extraction/text.py
index bb5a9d646..7c0a0cf8d 100644
--- a/sklearn/feature_extraction/text.py
+++ b/sklearn/feature_extraction/text.py
@@ -130,10 +130,8 @@ def strip_accents_unicode(s):
         ASCII equivalent.
     """
     normalized = unicodedata.normalize('NFKD', s)
-    if normalized == s:
-        return s
-    else:
-        return ''.join([c for c in normalized if not unicodedata.combining(c)])
+    # Always filter combining characters after NFKD normalization
+    return ''.join([c for c in normalized if not unicodedata.combining(c)])
 
 
 def strip_accents_ascii(s):
