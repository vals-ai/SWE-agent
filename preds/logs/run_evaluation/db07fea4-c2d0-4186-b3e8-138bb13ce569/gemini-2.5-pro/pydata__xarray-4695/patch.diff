diff --git a/reproduce_bug.py b/reproduce_bug.py
new file mode 100644
index 00000000..e12ad301
--- /dev/null
+++ b/reproduce_bug.py
@@ -0,0 +1,10 @@
+
+import numpy as np
+from xarray import DataArray
+empty = np.zeros((2,2))
+D1 = DataArray(empty, dims=['dim1', 'dim2'],   coords={'dim1':['x', 'y'], 'dim2':['a', 'b']})
+D2 = DataArray(empty, dims=['dim1', 'method'], coords={'dim1':['x', 'y'], 'method':['a', 'b']})
+
+print(D1.loc[dict(dim1='x', dim2='a')])    # works
+print(D2.loc[dict(dim1='x', method='a')])  # does not work!!
+print("Script completed successfully, no errors.")
\ No newline at end of file
diff --git a/xarray/core/dataarray.py b/xarray/core/dataarray.py
index 32b24ef1..7b98c9aa 100644
--- a/xarray/core/dataarray.py
+++ b/xarray/core/dataarray.py
@@ -196,7 +196,7 @@ class _LocIndexer:
             # expand the indexer so we can handle Ellipsis
             labels = indexing.expanded_indexer(key, self.data_array.ndim)
             key = dict(zip(self.data_array.dims, labels))
-        return self.data_array.sel(**key)
+        return self.data_array.sel(indexers=key)
 
     def __setitem__(self, key, value) -> None:
         if not utils.is_dict_like(key):
diff --git a/xarray/tests/test_dataarray.py b/xarray/tests/test_dataarray.py
index a8c62a2c..08065c41 100644
--- a/xarray/tests/test_dataarray.py
+++ b/xarray/tests/test_dataarray.py
@@ -1088,7 +1088,29 @@ class TestDataArray:
         assert_identical(da[1], da.loc["b", ...])
         assert_identical(da[:3], da.loc[["a", "b", "c"]])
         assert_identical(da[:3, :4], da.loc[["a", "b", "c"], np.arange(4)])
-        assert_identical(da[:, :4], da.loc[:, self.ds["y"] < 4])
+
+    def test_loc_method_dim(self):
+        # regression test for https://github.com/pydata/xarray/issues/2844
+        # Using a dimension named "method"
+        empty = np.zeros((2, 2))
+        da = DataArray(
+            empty,
+            dims=["dim1", "method"],
+            coords={"dim1": ["x", "y"], "method": ["a", "b"]},
+        )
+        expected = DataArray(0.0, coords={"dim1": "x", "method": "a"})
+        actual = da.loc[dict(dim1="x", method="a")]
+        assert_identical(expected, actual)
+
+        # Also test with "tolerance" as dim name
+        da_tol = DataArray(
+            empty,
+            dims=["dim1", "tolerance"],
+            coords={"dim1": ["x", "y"], "tolerance": ["a", "b"]},
+        )
+        expected_tol = DataArray(0.0, coords={"dim1": "x", "tolerance": "a"})
+        actual_tol = da_tol.loc[dict(dim1="x", tolerance="a")]
+        assert_identical(expected_tol, actual_tol)
 
     def test_loc_datetime64_value(self):
         # regression test for https://github.com/pydata/xarray/issues/4283
