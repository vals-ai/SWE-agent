diff --git a/sphinx/directives/other.py b/sphinx/directives/other.py
index 35e16e623..5a0ef1172 100644
--- a/sphinx/directives/other.py
+++ b/sphinx/directives/other.py
@@ -118,7 +118,7 @@ class TocTree(SphinxDirective):
                 docname = docname_join(self.env.docname, docname)
                 if url_re.match(ref) or ref == 'self':
                     toctree['entries'].append((title, ref))
-                elif docname not in self.env.found_docs:
+                elif docname not in self.env.found_docs and docname not in ('genindex', 'modindex', 'search'):
                     if excluded(self.env.doc2path(docname, False)):
                         message = __('toctree contains reference to excluded document %r')
                         subtype = 'excluded'
@@ -130,14 +130,20 @@ class TocTree(SphinxDirective):
                                    location=toctree)
                     self.env.note_reread()
                 else:
-                    if docname in all_docnames:
-                        all_docnames.remove(docname)
+                    # Special handling for magic index names
+                    if docname in ('genindex', 'modindex', 'search'):
+                        toctree['entries'].append((title, docname))
+                    # Handle regular documents
                     else:
-                        logger.warning(__('duplicated entry found in toctree: %s'), docname,
-                                       location=toctree)
-
-                    toctree['entries'].append((title, docname))
-                    toctree['includefiles'].append(docname)
+                        if docname in all_docnames:
+                            all_docnames.remove(docname)
+                        else:
+                            # Warn about duplicate entries for regular documents only
+                            logger.warning(__('duplicated entry found in toctree: %s'), docname,
+                                           location=toctree)
+
+                        toctree['entries'].append((title, docname))
+                        toctree['includefiles'].append(docname)
 
         # entries contains all entries (self references, external links etc.)
         if 'reversed' in self.options:
diff --git a/sphinx/environment/adapters/toctree.py b/sphinx/environment/adapters/toctree.py
index 9678e3c7c..17ca88448 100644
--- a/sphinx/environment/adapters/toctree.py
+++ b/sphinx/environment/adapters/toctree.py
@@ -165,14 +165,34 @@ class TocTree:
                                        ref, location=toctreenode)
                 except KeyError:
                     # this is raised if the included file does not exist
-                    if excluded(self.env.doc2path(ref, False)):
-                        message = __('toctree contains reference to excluded document %r')
-                    elif not included(self.env.doc2path(ref, False)):
-                        message = __('toctree contains reference to non-included document %r')
+                    # Allow magic names for index/search pages
+                    if ref in ('genindex', 'modindex', 'search'):
+                        if title is None:
+                            # use default title for special pages (__ is imported from locale)
+                            if ref == 'genindex':
+                                title = __('Index')
+                            elif ref == 'modindex':
+                                title = __('Module Index')
+                            elif ref == 'search':
+                                title = __('Search Page')
+                        reference = nodes.reference('', '', internal=True, refuri=ref,
+                                                    anchorname='', *[nodes.Text(title)])
+                        para = addnodes.compact_paragraph('', '', reference)
+                        item = nodes.list_item('', para)
+                        # Create a minimal toc structure for the special page entry
+                        toc = nodes.bullet_list('', item)
                     else:
-                        message = __('toctree contains reference to nonexisting document %r')
+                        # Log warning for other non-existing documents
+                        if excluded(self.env.doc2path(ref, False)):
+                            message = __('toctree contains reference to excluded document %r')
+                        elif not included(self.env.doc2path(ref, False)):
+                            message = __('toctree contains reference to non-included document %r')
+                        else:
+                            message = __('toctree contains reference to nonexisting document %r')
 
-                    logger.warning(message, ref, location=toctreenode)
+                        logger.warning(message, ref, location=toctreenode)
+                        # Skip to the next entry in the refs loop
+                        continue
                 else:
                     # if titles_only is given, only keep the main title and
                     # sub-toctrees
