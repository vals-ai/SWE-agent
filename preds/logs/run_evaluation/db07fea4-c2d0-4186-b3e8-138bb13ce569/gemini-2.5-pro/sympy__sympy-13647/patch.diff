diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..218bb36944
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,16 @@
+
+import sympy as sm
+
+M = sm.eye(6)
+print("M:")
+print(M)
+
+V = 2 * sm.ones(6, 2)
+print("V:")
+print(V)
+
+result = M.col_insert(3, V)
+print("Result:")
+print(result)
+
+print("Script completed successfully, no errors.")
\ No newline at end of file
diff --git a/sympy/matrices/common.py b/sympy/matrices/common.py
index 056d9bc497..4aa75e4d77 100644
--- a/sympy/matrices/common.py
+++ b/sympy/matrices/common.py
@@ -86,7 +86,7 @@ def entry(i, j):
                 return self[i, j]
             elif pos <= j < pos + other.cols:
                 return other[i, j - pos]
-            return self[i, j - pos - other.cols]
+            return self[i, j - other.cols]
 
         return self._new(self.rows, self.cols + other.cols,
                          lambda i, j: entry(i, j))
diff --git a/sympy/matrices/tests/test_matrices.py b/sympy/matrices/tests/test_matrices.py
index 78bd30fc81..ad19ba7c34 100644
--- a/sympy/matrices/tests/test_matrices.py
+++ b/sympy/matrices/tests/test_matrices.py
@@ -2233,6 +2233,37 @@ def test_col_insert():
         l = [0, 0, 0]
         l.insert(i, 4)
         assert flatten(zeros(3).col_insert(i, c4).row(0).tolist()) == l
+    # Test case from issue #12731
+    M = eye(6)
+    V = 2 * ones(6, 2)
+    expected = Matrix([
+        [1, 0, 0, 2, 2, 0, 0, 0],
+        [0, 1, 0, 2, 2, 0, 0, 0],
+        [0, 0, 1, 2, 2, 0, 0, 0],
+        [0, 0, 0, 2, 2, 1, 0, 0],
+        [0, 0, 0, 2, 2, 0, 1, 0],
+        [0, 0, 0, 2, 2, 0, 0, 1]])
+    assert M.col_insert(3, V) == expected
+
+    # Test inserting at the beginning
+    expected_beg = Matrix([
+        [2, 2, 1, 0, 0, 0, 0, 0],
+        [2, 2, 0, 1, 0, 0, 0, 0],
+        [2, 2, 0, 0, 1, 0, 0, 0],
+        [2, 2, 0, 0, 0, 1, 0, 0],
+        [2, 2, 0, 0, 0, 0, 1, 0],
+        [2, 2, 0, 0, 0, 0, 0, 1]])
+    assert M.col_insert(0, V) == expected_beg
+
+    # Test inserting at the end
+    expected_end = Matrix([
+        [1, 0, 0, 0, 0, 0, 2, 2],
+        [0, 1, 0, 0, 0, 0, 2, 2],
+        [0, 0, 1, 0, 0, 0, 2, 2],
+        [0, 0, 0, 1, 0, 0, 2, 2],
+        [0, 0, 0, 0, 1, 0, 2, 2],
+        [0, 0, 0, 0, 0, 1, 2, 2]])
+    assert M.col_insert(6, V) == expected_end
 
 
 def test_normalized():
