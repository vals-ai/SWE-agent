diff --git a/sphinx/extension.py b/sphinx/extension.py
index 7ec6c8518..2628b8fa8 100644
--- a/sphinx/extension.py
+++ b/sphinx/extension.py
@@ -14,6 +14,7 @@ from sphinx.config import Config
 from sphinx.errors import VersionRequirementError
 from sphinx.locale import __
 from sphinx.util import logging
+from packaging.version import Version, InvalidVersion
 
 if TYPE_CHECKING:
     from sphinx.application import Sphinx
@@ -51,11 +52,37 @@ def verify_needs_extensions(app: "Sphinx", config: Config) -> None:
                               'but it is not loaded.'), extname)
             continue
 
-        if extension.version == 'unknown version' or reqversion > extension.version:
-            raise VersionRequirementError(__('This project needs the extension %s at least in '
-                                             'version %s and therefore cannot be built with '
-                                             'the loaded version (%s).') %
-                                          (extname, reqversion, extension.version))
+        # Check for unknown version first
+        if extension.version == 'unknown version':
+            # Keep the original error message structure for unknown version
+            raise VersionRequirementError(
+                __('This project needs the extension %s at least in version %s '
+                   'and therefore cannot be built with the loaded version (%s).') %
+                (extname, reqversion, extension.version)
+            )
+        try:
+            # Compare versions using packaging.version
+            if Version(reqversion) > Version(extension.version):
+                # Keep the original error message structure for version mismatch
+                raise VersionRequirementError(
+                    __('This project needs the extension %s at least in version %s '
+                       'and therefore cannot be built with the loaded version (%s).') %
+                    (extname, reqversion, extension.version)
+                )
+        except InvalidVersion:
+            # Log a warning if version strings are not PEP 440 compliant
+            logger.warning(
+                __('Cannot compare versions for extension %s using PEP 440: "%s" or "%s" '
+                   'is not valid. Falling back to string comparison.'),
+                extname, reqversion, extension.version
+            )
+            # Fallback to string comparison for non-PEP 440 versions
+            if reqversion > extension.version:
+                raise VersionRequirementError(
+                    __('This project needs the extension %s at least in version %s '
+                       'and therefore cannot be built with the loaded version (%s).') %
+                    (extname, reqversion, extension.version)
+                )
 
 
 def setup(app: "Sphinx") -> Dict[str, Any]:
