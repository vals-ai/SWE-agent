diff --git a/django/contrib/admindocs/utils.py b/django/contrib/admindocs/utils.py
index 1ce4594501..c98a7843fb 100644
--- a/django/contrib/admindocs/utils.py
+++ b/django/contrib/admindocs/utils.py
@@ -167,18 +167,22 @@ def replace_named_groups(pattern):
         # Handle nested parentheses, e.g. '^(?P<a>(x|y))/b'.
         unmatched_open_brackets, prev_char = 1, None
         for idx, val in enumerate(pattern[end:]):
-            # If brackets are balanced, the end of the string for the current
-            # named capture group pattern has been reached.
-            if unmatched_open_brackets == 0:
-                group_pattern_and_name.append((pattern[start:end + idx], group_name))
-                break
-
             # Check for unescaped `(` and `)`. They mark the start and end of a
-            # nested group.
+            # nested group. Check *before* updating prev_char.
             if val == '(' and prev_char != '\\':
                 unmatched_open_brackets += 1
             elif val == ')' and prev_char != '\\':
                 unmatched_open_brackets -= 1
+
+            # If brackets are balanced, the end of the string for the current
+            # named capture group pattern has been reached.
+            if unmatched_open_brackets == 0:
+                # end + idx is the index of the closing parenthesis relative to pattern start.
+                # Slice needs to go up to end + idx + 1 to include it.
+                group_pattern_and_name.append((pattern[start : end + idx + 1], group_name))
+                break
+
+            # Update prev_char for the next iteration's escape check.
             prev_char = val
 
     # Replace the string for named capture groups with their group names.
