diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py
index 8c3509c3b..c87b9be39 100644
--- a/sphinx/ext/autodoc/__init__.py
+++ b/sphinx/ext/autodoc/__init__.py
@@ -80,6 +80,15 @@ def members_option(arg: Any) -> Union[object, List[str]]:
     return [x.strip() for x in arg.split(',') if x.strip()]
 
 
+def private_members_option(arg: Any) -> Union[object, List[str]]:
+    """Used to convert the :private-members: option to auto directives."""
+    if arg is None or arg is True:
+        # If no argument is given, or if the flag is present without arguments,
+        # treat it as ALL private members (maintaining existing behavior).
+        return ALL
+    return [x.strip() for x in arg.split(',') if x.strip()]
+
+
 def members_set_option(arg: Any) -> Union[object, Set[str]]:
     """Used to convert the :members: option to auto directives."""
     if arg is None:
@@ -649,15 +658,26 @@ class Documenter:
             elif (namespace, membername) in attr_docs:
                 if want_all and isprivate:
                     # ignore members whose name starts with _ by default
-                    keep = self.options.private_members
+                    # unless :private-members: is specified
+                    if self.options.private_members is ALL:
+                        keep = True
+                    elif self.options.private_members and membername in self.options.private_members:
+                        keep = True
+                    else:
+                        keep = False # Skip other private members
                 else:
                     # keep documented attributes
                     keep = True
                 isattr = True
             elif want_all and isprivate:
                 # ignore members whose name starts with _ by default
-                keep = self.options.private_members and \
-                    (has_doc or self.options.undoc_members)
+                # unless :private-members: is specified
+                if self.options.private_members is ALL:
+                    keep = has_doc or self.options.undoc_members
+                elif self.options.private_members and membername in self.options.private_members:
+                    keep = has_doc or self.options.undoc_members
+                else:
+                    keep = False # Skip other private members
             else:
                 if self.options.members is ALL and is_filtered_inherited_member(membername):
                     keep = False
@@ -859,7 +879,7 @@ class ModuleDocumenter(Documenter):
         'show-inheritance': bool_option, 'synopsis': identity,
         'platform': identity, 'deprecated': bool_option,
         'member-order': member_order_option, 'exclude-members': members_set_option,
-        'private-members': bool_option, 'special-members': members_option,
+        'private-members': private_members_option, 'special-members': members_option,
         'imported-members': bool_option, 'ignore-module-all': bool_option
     }  # type: Dict[str, Callable]
 
@@ -1279,7 +1299,7 @@ class ClassDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):  # type:
         'noindex': bool_option, 'inherited-members': inherited_members_option,
         'show-inheritance': bool_option, 'member-order': member_order_option,
         'exclude-members': members_set_option,
-        'private-members': bool_option, 'special-members': members_option,
+        'private-members': private_members_option, 'special-members': members_option,
     }  # type: Dict[str, Callable]
 
     _signature_class = None  # type: Any
diff --git a/tests/roots/test-ext-autodoc/target/private.py b/tests/roots/test-ext-autodoc/target/private.py
index a39ce085e..a82bf7818 100644
--- a/tests/roots/test-ext-autodoc/target/private.py
+++ b/tests/roots/test-ext-autodoc/target/private.py
@@ -4,7 +4,7 @@ def private_function(name):
     :meta private:
     """
 
-def _public_function(name):
+def _private1(name):
     """public_function is a docstring().
 
     :meta public:
