diff --git a/django/forms/models.py b/django/forms/models.py
index dafc11f995..df013dae59 100644
--- a/django/forms/models.py
+++ b/django/forms/models.py
@@ -14,6 +14,7 @@ from django.forms.formsets import BaseFormSet, formset_factory
 from django.forms.utils import ErrorList
 from django.forms.widgets import (
     HiddenInput, MultipleHiddenInput, SelectMultiple,
+    RadioSelect,
 )
 from django.utils.text import capfirst, get_text_list
 from django.utils.translation import gettext, gettext_lazy as _
@@ -1189,6 +1190,10 @@ class ModelChoiceField(ChoiceField):
             self.empty_label = None
         else:
             self.empty_label = empty_label
+        # Don't add the empty_label if the widget is RadioSelect and the field is required.
+        # Check the widget argument directly, as self.widget isn't assigned yet.
+        if isinstance(widget, RadioSelect) and required:
+            self.empty_label = None
 
         # Call Field instead of ChoiceField __init__() because we don't need
         # ChoiceField.__init__().
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..55fc474bd5
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,71 @@
+
+import os
+import django
+from django.conf import settings
+
+# Configure Django settings
+settings.configure(
+    INSTALLED_APPS=[
+        'django.contrib.contenttypes',
+        'django.contrib.auth', # Needed for contenttypes
+    ],
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': ':memory:',
+        }
+    }
+)
+django.setup()
+
+from django.db import models
+from django.forms import ModelForm, RadioSelect
+
+# Define models directly in the script
+class BatchData(models.Model):
+    name = models.CharField(max_length=100)
+
+    def __str__(self):
+        return self.name
+
+    class Meta:
+        # Required to avoid AppRegistryNotReady error in this setup
+        app_label = 'reproduce_app'
+
+
+class TestRun(models.Model):
+    data_file = models.ForeignKey(BatchData, on_delete=models.SET_NULL, null=True, blank=False)
+
+    def __str__(self):
+        return f"TestRun {self.pk}"
+
+    class Meta:
+        # Required to avoid AppRegistryNotReady error in this setup
+        app_label = 'reproduce_app'
+
+
+# Define the form directly in the script
+class TestRunForm(ModelForm):
+    class Meta:
+        model = TestRun
+        fields = ['data_file']
+        widgets = {'data_file': RadioSelect()}
+
+# Need to manually create the table for the model
+from django.db import connection
+with connection.schema_editor() as schema_editor:
+    schema_editor.create_model(BatchData)
+    schema_editor.create_model(TestRun)
+
+# Now add back the logic to create data and print the form
+BatchData.objects.create(id=1, name="First Data File")
+test_run_form = TestRunForm()
+print(test_run_form['data_file'])
+
+
+# Create a BatchData instance for the ForeignKey relation
+
+# Instantiate the form
+
+# Print the rendered HTML for the data_file field
+print("\nScript completed successfully, no errors.")
\ No newline at end of file
