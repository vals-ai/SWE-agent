diff --git a/django/contrib/admin/sites.py b/django/contrib/admin/sites.py
index 61be31d890..866d461a24 100644
--- a/django/contrib/admin/sites.py
+++ b/django/contrib/admin/sites.py
@@ -453,7 +453,11 @@ class AdminSite:
                 pass
             else:
                 if getattr(match.func, "should_append_slash", True):
-                    return HttpResponsePermanentRedirect("%s/" % request.path)
+                    redirect_url = "%s/" % request.path
+                    query_string = request.META.get('QUERY_STRING', '')
+                    if query_string:
+                        redirect_url += "?%s" % query_string
+                    return HttpResponsePermanentRedirect(redirect_url)
         raise Http404
 
     def _build_app_dict(self, request, label=None):
diff --git a/tests/admin_views/tests.py b/tests/admin_views/tests.py
index 5f7aafe430..c978011054 100644
--- a/tests/admin_views/tests.py
+++ b/tests/admin_views/tests.py
@@ -8515,6 +8515,31 @@ class AdminSiteFinalCatchAllPatternTests(TestCase):
             "/test_admin/admin/login/?next=/test_admin/admin/admin_views/article",
         )
 
+    @override_settings(APPEND_SLASH=True)
+    def test_missing_slash_append_slash_true_query_string(self):
+        """
+        APPEND_SLASH=True redirects should preserve the query string.
+        """
+        superuser = User.objects.create_user(
+            username="staff",
+            password="secret",
+            email="staff@example.com",
+            is_staff=True,
+        )
+        self.client.force_login(superuser)
+        known_url = reverse("admin:admin_views_article_changelist")
+        query_string = "test=1&foo=bar"
+        url_without_slash = known_url[:-1]
+        url_with_query = f"{url_without_slash}?{query_string}"
+        expected_redirect_url = f"{known_url}?{query_string}"
+        response = self.client.get(url_with_query)
+        self.assertRedirects(
+            response,
+            expected_redirect_url,
+            status_code=301,
+            target_status_code=403,  # Target requires permissions
+        )
+
     @override_settings(APPEND_SLASH=False)
     def test_missing_slash_append_slash_false(self):
         superuser = User.objects.create_user(
