diff --git a/bug_report.png b/bug_report.png
new file mode 100644
index 0000000000..ef0eca398b
Binary files /dev/null and b/bug_report.png differ
diff --git a/lib/matplotlib/tests/test_axes.py b/lib/matplotlib/tests/test_axes.py
index 6c970cdbeb..4f735e4990 100644
--- a/lib/matplotlib/tests/test_axes.py
+++ b/lib/matplotlib/tests/test_axes.py
@@ -766,14 +766,27 @@ def test_annotate_default_arrow():
     assert ann.arrow_patch is not None
 
 
-def test_annotate_signature():
-    """Check that the signature of Axes.annotate() matches Annotation."""
-    fig, ax = plt.subplots()
-    annotate_params = inspect.signature(ax.annotate).parameters
-    annotation_params = inspect.signature(mtext.Annotation).parameters
-    assert list(annotate_params.keys()) == list(annotation_params.keys())
-    for p1, p2 in zip(annotate_params.values(), annotation_params.values()):
-        assert p1 == p2
+def test_annotate_mutable_xy():
+    # Check that mutating the input xy array doesn't affect the annotation
+    # See https://github.com/matplotlib/matplotlib/issues/17490
+    fig, ax = plt.subplots()
+    ax.set_xlim(-5, 5)
+    ax.set_ylim(-3, 3)
+
+    xy_0 = np.array((-4, 1))
+    xy_f = np.array((-1, 1))
+    ann = ax.annotate(text='', xy=xy_0, xytext=xy_f,
+                      arrowprops=dict(arrowstyle='<->'))
+
+    # Store the original position
+    original_pos = ann.xy
+
+    # Mutate the original array
+    xy_0[1] = 3
+
+    # Check that the annotation's position hasn't changed
+    assert_array_equal(ann.xy, original_pos)
+    assert ann.xy[1] == 1  # Explicitly check the y-coordinate
 
 
 @image_comparison(['fill_units.png'], savefig_kwarg={'dpi': 60})
diff --git a/lib/matplotlib/text.py b/lib/matplotlib/text.py
index d4922fc517..e00fd94bf2 100644
--- a/lib/matplotlib/text.py
+++ b/lib/matplotlib/text.py
@@ -1456,7 +1456,7 @@ class _AnnotationBase:
                  xycoords='data',
                  annotation_clip=None):
 
-        self.xy = xy
+        self.xy = np.copy(xy)
         self.xycoords = xycoords
         self.set_annotation_clip(annotation_clip)
 
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..ad6bbb7789
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,24 @@
+
+import matplotlib.pyplot as plt
+import numpy as np
+
+fig = plt.figure("test")
+
+ax = fig.add_axes([0.13, 0.15, .8, .8])
+ax.set_xlim(-5, 5)
+ax.set_ylim(-3, 3)
+
+xy_0 =np.array((-4, 1))
+xy_f =np.array((-1, 1))
+# this annotation is messed by later changing the array passed as xy kwarg
+ax.annotate(text='', xy=xy_0, xytext=xy_f, arrowprops=dict(arrowstyle='<->'))
+xy_0[1] = 3# <--this  updates the arrow position
+
+xy_0 =np.array((1, 1))
+xy_f =np.array((4, 1))
+# using a copy of the array helps spoting where the problem is
+ax.annotate(text='', xy=xy_0.copy(), xytext=xy_f, arrowprops=dict(arrowstyle='<->'))
+xy_0[1] = 3
+
+plt.savefig('bug_report.png')
+print("Script completed successfully, plot saved to bug_report.png.")
\ No newline at end of file
