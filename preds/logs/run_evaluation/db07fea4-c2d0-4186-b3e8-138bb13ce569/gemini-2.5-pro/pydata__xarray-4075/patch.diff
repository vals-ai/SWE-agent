diff --git a/xarray/core/weighted.py b/xarray/core/weighted.py
index 996d2e4c..dd69f515 100644
--- a/xarray/core/weighted.py
+++ b/xarray/core/weighted.py
@@ -132,6 +132,9 @@ class Weighted:
         # `dot` does not broadcast arrays, so this avoids creating a large
         # DataArray (if `weights` has additional dimensions)
         # maybe add fasttrack (`(da * weights).sum(dims=dim, skipna=skipna)`)
+        if weights.dtype == bool:
+            weights = weights.astype(float)
+        # skipna is handled within the weighted method; tell dot not to skip again
         return dot(da, weights, dims=dim)
 
     def _sum_of_weights(
diff --git a/xarray/tests/test_weighted.py b/xarray/tests/test_weighted.py
index 24531215..cdba91c9 100644
--- a/xarray/tests/test_weighted.py
+++ b/xarray/tests/test_weighted.py
@@ -155,6 +155,25 @@ def test_weighted_mean_nan(weights, expected, skipna):
 
     result = da.weighted(weights).mean(skipna=skipna)
 
+
+
+@pytest.mark.parametrize(
+    ("weights", "expected"),
+    (
+        ([True, True, False], 1.0),
+        ([True, False, False], 1.0),
+        ([False, False, False], np.nan),
+        ([True, True, True], 1.5),
+    ),
+)
+def test_weighted_mean_boolean_weights(weights, expected):
+
+    da = DataArray([1.0, 1.0, 2.5])
+    weights = DataArray(weights, dims=da.dims)
+    expected = DataArray(expected)
+
+    result = da.weighted(weights).mean()
+
     assert_equal(expected, result)
 
 
