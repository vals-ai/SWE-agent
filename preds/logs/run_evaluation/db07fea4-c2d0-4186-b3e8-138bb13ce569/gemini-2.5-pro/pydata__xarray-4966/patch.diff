diff --git a/xarray/coding/variables.py b/xarray/coding/variables.py
index b035ff82..4b8a5607 100644
--- a/xarray/coding/variables.py
+++ b/xarray/coding/variables.py
@@ -308,18 +308,77 @@ class UnsignedIntegerCoder(VariableCoder):
         if "_Unsigned" in attrs:
             unsigned = pop_to(attrs, encoding, "_Unsigned")
 
+            unsigned_str = str(unsigned).lower()
             if data.dtype.kind == "i":
-                if unsigned == "true":
-                    unsigned_dtype = np.dtype("u%s" % data.dtype.itemsize)
-                    transform = partial(np.asarray, dtype=unsigned_dtype)
-                    data = lazy_elemwise_func(data, transform, unsigned_dtype)
+                if unsigned_str == "true":
+                    # Convert signed int to unsigned int
+                    unsigned_dtype = np.dtype(f"u{data.dtype.itemsize}")
                     if "_FillValue" in attrs:
-                        new_fill = unsigned_dtype.type(attrs["_FillValue"])
-                        attrs["_FillValue"] = new_fill
+                        # Check if _FillValue is representable as unsigned
+                        fill_value = attrs["_FillValue"]
+                        if fill_value < 0:
+                            warnings.warn(
+                                f"variable {name!r} has signed _FillValue {fill_value} but "
+                                f"_Unsigned='true'. Ignoring attribute.",
+                                SerializationWarning,
+                                stacklevel=3,
+                            )
+                        else:
+                            attrs["_FillValue"] = unsigned_dtype.type(fill_value)
+                            transform = partial(np.asarray, dtype=unsigned_dtype)
+                            data = lazy_elemwise_func(data, transform, unsigned_dtype)
+                    else:
+                        transform = partial(np.asarray, dtype=unsigned_dtype)
+                        data = lazy_elemwise_func(data, transform, unsigned_dtype)
+
+                elif unsigned_str == "false":
+                    # Already signed, _Unsigned='false' is redundant, ignore.
+                    pass
+                else:
+                    warnings.warn(
+                        f"variable {name!r} has unrecognized _Unsigned attribute: {unsigned!r}. "
+                        f"Ignoring attribute.",
+                        SerializationWarning,
+                        stacklevel=3,
+                    )
+            elif data.dtype.kind == "u":
+                if unsigned_str == "false":
+                    # Convert unsigned int to signed int (pydap hack)
+                    signed_dtype = np.dtype(f"i{data.dtype.itemsize}")
+                    if "_FillValue" in attrs:
+                        # Check if _FillValue is representable as signed
+                        fill_value = attrs["_FillValue"]
+                        info = np.iinfo(signed_dtype)
+                        if fill_value > info.max:
+                            warnings.warn(
+                                f"variable {name!r} has unsigned _FillValue {fill_value} but "
+                                f"_Unsigned='false'. Ignoring attribute.",
+                                SerializationWarning,
+                                stacklevel=3,
+                            )
+                        else:
+                            attrs["_FillValue"] = signed_dtype.type(fill_value)
+                            transform = partial(np.asarray, dtype=signed_dtype)
+                            data = lazy_elemwise_func(data, transform, signed_dtype)
+                    else:
+                        transform = partial(np.asarray, dtype=signed_dtype)
+                        data = lazy_elemwise_func(data, transform, signed_dtype)
+
+                elif unsigned_str == "true":
+                    # Already unsigned, _Unsigned='true' is redundant, ignore.
+                    pass
+                else:
+                    warnings.warn(
+                        f"variable {name!r} has unrecognized _Unsigned attribute: {unsigned!r}. "
+                        f"Ignoring attribute.",
+                        SerializationWarning,
+                        stacklevel=3,
+                    )
             else:
+                # Non-integer type
                 warnings.warn(
-                    "variable %r has _Unsigned attribute but is not "
-                    "of integer type. Ignoring attribute." % name,
+                    f"variable {name!r} has _Unsigned attribute but is not "
+                    f"of integer type (dtype={data.dtype}). Ignoring attribute.",
                     SerializationWarning,
                     stacklevel=3,
                 )
diff --git a/xarray/tests/test_backends.py b/xarray/tests/test_backends.py
index d15736e6..808af40f 100644
--- a/xarray/tests/test_backends.py
+++ b/xarray/tests/test_backends.py
@@ -3622,6 +3622,7 @@ class TestPydap:
             assert_equal(actual, expected)
 
 
+
 @network
 @requires_scipy_or_netCDF4
 @requires_pydap
