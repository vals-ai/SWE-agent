diff --git a/django/contrib/auth/forms.py b/django/contrib/auth/forms.py
index a0cfed0995..4ca86d463b 100644
--- a/django/contrib/auth/forms.py
+++ b/django/contrib/auth/forms.py
@@ -191,6 +191,7 @@ class AuthenticationForm(forms.Form):
 
         # Set the max length and label for the "username" field.
         self.username_field = UserModel._meta.get_field(UserModel.USERNAME_FIELD)
+        self.fields['username'].widget.attrs['maxlength'] = self.username_field.max_length or 254
         self.fields['username'].max_length = self.username_field.max_length or 254
         if self.fields['username'].label is None:
             self.fields['username'].label = capfirst(self.username_field.verbose_name)
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..a1d8ff8a35
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,29 @@
+
+import os
+import django
+from django.conf import settings
+
+# Configure minimal Django settings
+if not settings.configured:
+    settings.configure(
+        SECRET_KEY='dummy',
+        INSTALLED_APPS=[
+            'django.contrib.auth',
+            'django.contrib.contenttypes',
+        ],
+        TEMPLATES=[
+            {
+                'BACKEND': 'django.template.backends.django.DjangoTemplates',
+                'APP_DIRS': True,
+            },
+        ]
+    )
+
+django.setup()
+
+from django.contrib.auth.forms import AuthenticationForm
+
+# Instantiate the form and print the username field's HTML
+form = AuthenticationForm()
+print(form['username'])
+print("\nScript completed successfully, no errors.")
\ No newline at end of file
diff --git a/tests/auth_tests/test_forms.py b/tests/auth_tests/test_forms.py
index 7085dcfa11..c35ff7bb9c 100644
--- a/tests/auth_tests/test_forms.py
+++ b/tests/auth_tests/test_forms.py
@@ -8,6 +8,7 @@ from django.contrib.auth.forms import (
     PasswordResetForm, ReadOnlyPasswordHashField, ReadOnlyPasswordHashWidget,
     SetPasswordForm, UserChangeForm, UserCreationForm,
 )
+from django.contrib.auth import get_user_model
 from django.contrib.auth.models import User
 from django.contrib.auth.signals import user_login_failed
 from django.contrib.sites.models import Site
@@ -503,6 +504,16 @@ class AuthenticationFormTest(TestDataMixin, TestCase):
         self.assertEqual(error.code, 'invalid_login')
         self.assertEqual(error.params, {'username': 'username'})
 
+
+    def test_username_maxlength_widget_attribute(self):
+        """The username field widget has a maxlength attribute."""
+        form = AuthenticationForm()
+        user_model = get_user_model()
+        username_field = user_model._meta.get_field(user_model.USERNAME_FIELD)
+        self.assertEqual(
+            form.fields['username'].widget.attrs['maxlength'],
+            username_field.max_length,
+        )
     def test_html_autocomplete_attributes(self):
         form = AuthenticationForm()
         tests = (
