+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   setup.py
	modified:   sphinx/ext/autodoc/__init__.py
	modified:   tests/test_ext_autodoc.py
	modified:   tox.ini

no changes added to commit (use "git add" and/or "git commit -a")
+ git show
+ git -c core.fileMode=false diff 9988d5ce267bf0df4791770b469431b1fb00dcdd
commit 9988d5ce267bf0df4791770b469431b1fb00dcdd
Author: Takeshi KOMIYA <i.tkomiya@gmail.com>
Date:   Sat May 30 13:15:19 2020 +0900

    Update CHANGES for PR #7746

diff --git a/CHANGES b/CHANGES
index 166d8fb8a..6c2761c53 100644
--- a/CHANGES
+++ b/CHANGES
@@ -4,6 +4,8 @@ Release 3.1.0 (in development)
 Dependencies
 ------------
 
+* #7746: mathjax: Update to 2.7.5
+
 Incompatible changes
 --------------------
 
diff --git a/setup.py b/setup.py
index 5e822fe9b..77b63df38 100644
--- a/setup.py
+++ b/setup.py
@@ -15,22 +15,22 @@ if sys.version_info < (3, 5):
     sys.exit(1)
 
 install_requires = [
-    'sphinxcontrib-applehelp',
-    'sphinxcontrib-devhelp',
+    'sphinxcontrib-applehelp<=1.0.7',
+    'sphinxcontrib-devhelp<=1.0.5',
     'sphinxcontrib-jsmath',
-    'sphinxcontrib-htmlhelp',
-    'sphinxcontrib-serializinghtml',
-    'sphinxcontrib-qthelp',
-    'Jinja2>=2.3',
+    'sphinxcontrib-htmlhelp<=2.0.4',
+    'sphinxcontrib-serializinghtml<=1.1.9',
+    'sphinxcontrib-qthelp<=1.0.6',
+    'Jinja2<3.0',
     'Pygments>=2.0',
     'docutils>=0.12',
     'snowballstemmer>=1.1',
     'babel>=1.3',
-    'alabaster>=0.7,<0.8',
+    'alabaster>=0.7,<0.7.12',
     'imagesize',
     'requests>=2.5.0',
     'setuptools',
-    'packaging',
+    'packaging', 'markupsafe<=2.0.1',
 ]
 
 extras_require = {
diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py
index f8e4be999..3dc4312d8 100644
--- a/sphinx/ext/autodoc/__init__.py
+++ b/sphinx/ext/autodoc/__init__.py
@@ -447,11 +447,16 @@ class Documenter:
 
         # one signature per line, indented by column
         prefix = '.. %s:%s:: ' % (domain, directive)
+        first_line_prefix = '%s%s' % (prefix, name)
+        # Padding should align subsequent signatures under the first one
+        padding = ' ' * len(prefix) # <-- Pad based on directive prefix only
         for i, sig_line in enumerate(sig.split("\n")):
-            self.add_line('%s%s%s' % (prefix, name, sig_line),
-                          sourcename)
             if i == 0:
-                prefix = " " * len(prefix)
+                # First line includes directive prefix and name
+                self.add_line('%s%s' % (first_line_prefix, sig_line), sourcename)
+            else:
+                # Subsequent lines are padded (by prefix length) and include the name
+                self.add_line('%s%s%s' % (padding, name, sig_line), sourcename)
 
         if self.options.noindex:
             self.add_line('   :noindex:', sourcename)
@@ -825,11 +830,22 @@ class Documenter:
         # reST and no starting newline is present
         self.add_line('', sourcename)
 
-        # format the object's signature, if any
-        sig = self.format_signature()
+        # format the object's signature, if any. This might populate self.docstring_signatures
+        main_sig = self.format_signature()
 
         # generate the directive header and options, if applicable
-        self.add_directive_header(sig)
+        if hasattr(self, 'docstring_signatures') and self.docstring_signatures:
+            # If docstring signatures were found, format them as "(args) [-> retann]"
+            # and pass the newline-joined string to add_directive_header.
+            sigs_to_render = []
+            for args, retann in self.docstring_signatures:
+                # args is just the content inside parens, e.g., "a: int"
+                formatted = '(' + args + ')' + ((' -> %s' % retann) if retann else '')
+                sigs_to_render.append(formatted)
+            self.add_directive_header('\n'.join(sigs_to_render))
+        else:
+            # Otherwise, use the main signature (from introspection or explicit self.args)
+            self.add_directive_header(main_sig)
         self.add_line('', sourcename)
 
         # e.g. the module directive doesn't have content
@@ -1037,39 +1053,56 @@ class DocstringSignatureMixin:
     feature of reading the signature from the docstring.
     """
 
-    def _find_signature(self, encoding: str = None) -> Tuple[str, str]:
+    def _find_signature(self, encoding: str = None) -> List[Tuple[str, str]]:
         if encoding is not None:
             warnings.warn("The 'encoding' argument to autodoc.%s._find_signature() is "
                           "deprecated." % self.__class__.__name__,
                           RemovedInSphinx40Warning, stacklevel=2)
         docstrings = self.get_doc()
         self._new_docstrings = docstrings[:]
-        result = None
-        for i, doclines in enumerate(docstrings):
-            # no lines in docstring, no match
-            if not doclines:
-                continue
-            # match first line of docstring against signature RE
-            match = py_ext_sig_re.match(doclines[0])
-            if not match:
-                continue
-            exmod, path, base, args, retann = match.groups()
-            # the base name must match ours
+        signatures = []
+        lines_stripped = 0
+        # Assume signatures are only in the first docstring block
+        if docstrings and docstrings[0]:
+            doclines = docstrings[0]
+            tab_width = self.directive.state.document.settings.tab_width  # type: ignore
             valid_names = [self.objpath[-1]]  # type: ignore
             if isinstance(self, ClassDocumenter):
                 valid_names.append('__init__')
                 if hasattr(self.object, '__mro__'):
                     valid_names.extend(cls.__name__ for cls in self.object.__mro__)
-            if base not in valid_names:
-                continue
-            # re-prepare docstring to ignore more leading indentation
-            tab_width = self.directive.state.document.settings.tab_width  # type: ignore
-            self._new_docstrings[i] = prepare_docstring('\n'.join(doclines[1:]),
-                                                        tabsize=tab_width)
-            result = args, retann
-            # don't look any further
-            break
-        return result
+
+            for i, line in enumerate(doclines):
+                match = py_ext_sig_re.match(line)
+                if not match:
+                    # Stop processing lines as soon as one doesn't match
+                    break
+
+                exmod, path, base, args, retann = match.groups()
+                # The base name must match ours
+                if base not in valid_names:
+                    # Stop if the name doesn't match
+                    break
+
+                # Signature matched, store it and mark line for stripping
+                signatures.append((args, retann))
+                lines_stripped += 1
+            
+            if lines_stripped > 0:
+                # Re-prepare the docstring, removing the stripped lines
+                remaining_docstring = '\n'.join(doclines[lines_stripped:])
+                self._new_docstrings[0] = prepare_docstring(remaining_docstring,
+                                                            tabsize=tab_width)
+            else:
+                # No signatures found or stripped, ensure _new_docstrings is consistent
+                # In the original code, _new_docstrings was always assigned before the loop.
+                # Here we ensure it's handled if no signatures are stripped.
+                # If docstrings[0] existed, _new_docstrings[0] should remain as is.
+                # If docstrings[0] was empty/didn't exist, _new_docstrings[0] remains unchanged (likely empty list).
+                pass # No change needed if no lines stripped
+
+        # Return the list of found signatures (args, retann tuples)
+        return signatures
 
     def get_doc(self, encoding: str = None, ignore: int = None) -> List[List[str]]:
         if encoding is not None:
@@ -1082,12 +1115,17 @@ class DocstringSignatureMixin:
         return super().get_doc(None, ignore)  # type: ignore
 
     def format_signature(self, **kwargs: Any) -> str:
+        self.docstring_signatures = []  # Initialize the new attribute
         if self.args is None and self.env.config.autodoc_docstring_signature:  # type: ignore
             # only act if a signature is not explicitly given already, and if
             # the feature is enabled
-            result = self._find_signature()
-            if result is not None:
-                self.args, self.retann = result
+            signatures = self._find_signature() # Returns List[Tuple[str, str]]
+            if signatures: # Check if the list is not empty
+                self.docstring_signatures = signatures
+                # Set self.args and self.retann from the first signature
+                # for potential use by super().format_signature or other methods
+                self.args, self.retann = signatures[0]
+            # If signatures is empty, self.args and self.retann remain None
         return super().format_signature(**kwargs)  # type: ignore
 
 
@@ -1100,12 +1138,13 @@ class DocstringStripSignatureMixin(DocstringSignatureMixin):
         if self.args is None and self.env.config.autodoc_docstring_signature:  # type: ignore
             # only act if a signature is not explicitly given already, and if
             # the feature is enabled
-            result = self._find_signature()
-            if result is not None:
-                # Discarding _args is a only difference with
-                # DocstringSignatureMixin.format_signature.
-                # Documenter.format_signature use self.args value to format.
-                _args, self.retann = result
+            signatures = self._find_signature() # Returns List[Tuple[str, str]]
+            if signatures: # Check if the list is not empty
+                # Discarding args is the main purpose here.
+                # We only potentially keep the return annotation from the first signature.
+                # self.args remains None, so super().format_signature won't use it.
+                _args, self.retann = signatures[0]
+            # If signatures is empty, self.retann remains None
         return super().format_signature(**kwargs)
 
 
diff --git a/tests/test_ext_autodoc.py b/tests/test_ext_autodoc.py
index c1799778c..919509de2 100644
--- a/tests/test_ext_autodoc.py
+++ b/tests/test_ext_autodoc.py
@@ -9,6 +9,7 @@
     :license: BSD, see LICENSE for details.
 """
 
+import textwrap
 import sys
 from unittest.mock import Mock
 from warnings import catch_warnings
@@ -288,6 +289,153 @@ def test_format_signature(app):
     assert formatsig('function', 'curried4', curried4, None, None) == \
         '(b, c=42, *d, **e)'
 
+@pytest.mark.sphinx('html', testroot='ext-autodoc')
+def test_autodoc_docstring_multiple_signatures(app):
+    """Test autodoc with multiple signatures in the docstring."""
+    # Ensure the config option is enabled
+    app.config.autodoc_docstring_signature = True
+
+    # Define a target module and function with multiple signatures
+    options = {}
+    (app.srcdir / 'test_multisig.py').write_text(textwrap.dedent("""\
+        def overloaded_func(a: int) -> int:
+            '''
+            overloaded_func(a: int) -> int
+            overloaded_func(a: str, b: float = 1.0) -> str
+
+            This is the actual docstring.
+            It should appear after the signatures.
+            '''
+            if isinstance(a, int):
+                return a + 1
+            else:
+                return a * int(b)
+    """), encoding='utf8')
+
+    # Run autodoc
+    actual = do_autodoc(app, 'function', 'test_multisig.overloaded_func', {})
+
+    # Assertions
+    expected_directive = [
+        '',
+        '.. py:function:: overloaded_func(a: int) -> int',
+        '                 overloaded_func(a: str, b: float = 1.0) -> str',
+        '   :module: test_multisig',
+        '',
+        '   This is the actual docstring.',
+        '   It should appear after the signatures.',
+        '',
+    ]
+    assert list(actual) == expected_directive
+
+    # Test with a class method as well
+    (app.srcdir / 'test_multisig_class.py').write_text(textwrap.dedent("""\
+        class MyClass:
+            def overloaded_meth(self, x: int):
+                '''
+                overloaded_meth(self, x: int)
+                overloaded_meth(self, x: str, y: bool) -> str
+
+                Method docstring.
+                '''
+                if isinstance(x, int):
+                    print(x)
+                else:
+                    return x if y else ""
+    """), encoding='utf8')
+
+    # Test using autoclass with :members: to provide context
+    actual_class_with_method = do_autodoc(app, 'class', 'test_multisig_class.MyClass', {'members': 'overloaded_meth'})
+    expected_class_output = [
+        '',
+        '.. py:class:: MyClass()',
+        '   :module: test_multisig_class',
+        '',
+        '',
+        '   .. py:method:: MyClass.overloaded_meth(self, x: int)',
+        '                   MyClass.overloaded_meth(self, x: str, y: bool) -> str',
+        '      :module: test_multisig_class',
+        '',
+        '      Method docstring.',
+        '',
+    ]
+    # Filter out potential empty lines from docstring processing differences
+    actual_filtered = [line for line in actual_class_with_method if line or line.strip()]
+    expected_filtered = [line for line in expected_class_output if line or line.strip()]
+    assert actual_filtered == expected_filtered
+
+    # Test with __init__
+    (app.srcdir / 'test_multisig_init.py').write_text(textwrap.dedent("""\
+        class MyInitClass:
+            def __init__(self, val: int):
+                '''
+                __init__(self, val: int)
+                __init__(self, name: str)
+
+                Init docstring.
+                '''
+                self.val = val
+    """), encoding='utf8')
+
+    actual_init = do_autodoc(app, 'class', 'test_multisig_init.MyInitClass', {})
+    expected_init_directive = [
+        '',
+        '.. py:class:: MyInitClass(val: int)',
+        '               MyInitClass(name: str)',
+        '   :module: test_multisig_init',
+        '',
+        '   Init docstring.',
+        '',
+    ]
+    assert list(actual_init) == expected_init_directive
+
+    # Test case where signature does not match function name (should stop parsing)
+    (app.srcdir / 'test_multisig_mismatch.py').write_text(textwrap.dedent("""\
+        def mismatch_func(a: int) -> int:
+            '''
+            mismatch_func(a: int) -> int
+            another_func(a: str) -> str  # This one should be ignored
+
+            Docstring starts here.
+            '''
+            return a + 1
+    """), encoding='utf8')
+
+    actual_mismatch = do_autodoc(app, 'function', 'test_multisig_mismatch.mismatch_func', {})
+    expected_mismatch_directive = [
+        '',
+        '.. py:function:: mismatch_func(a: int) -> int', # Only the first signature
+        '   :module: test_multisig_mismatch',
+        '',
+        '   another_func(a: str) -> str  # This one should be ignored', # Not stripped
+        '',
+        '   Docstring starts here.',
+        '',
+    ]
+    assert list(actual_mismatch) == expected_mismatch_directive
+
+    # Test case with no real docstring after signatures
+    (app.srcdir / 'test_multisig_nodoc.py').write_text(textwrap.dedent("""\
+        def nodoc_func(a: int) -> int:
+            '''
+            nodoc_func(a: int) -> int
+            nodoc_func(b: str) -> str
+            '''
+            return 1
+    """), encoding='utf8')
+
+    actual_nodoc = do_autodoc(app, 'function', 'test_multisig_nodoc.nodoc_func', {})
+    expected_nodoc_directive = [
+        '',
+        '.. py:function:: nodoc_func(a: int) -> int',
+        '                 nodoc_func(b: str) -> str',
+        '   :module: test_multisig_nodoc',
+        '',
+    ]
+    # Need to filter trailing empty lines added by do_autodoc
+    assert list(actual_nodoc) == expected_nodoc_directive
+
+
 
 def test_autodoc_process_signature_typehints(app):
     captured = []
diff --git a/tox.ini b/tox.ini
index d9f040544..bf39854b6 100644
--- a/tox.ini
+++ b/tox.ini
@@ -28,7 +28,7 @@ extras =
 setenv =
     PYTHONWARNINGS = all,ignore::ImportWarning:importlib._bootstrap_external,ignore::DeprecationWarning:site,ignore::DeprecationWarning:distutils
 commands=
-    pytest --durations 25 {posargs}
+    pytest -rA --durations 25 {posargs}
 
 [testenv:flake8]
 basepython = python3
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install -e '.[test]'
Obtaining file:///testbed
  Preparing metadata (setup.py): started
  Preparing metadata (setup.py): finished with status 'done'
Requirement already satisfied: sphinxcontrib-applehelp<=1.0.7 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.1.0.dev20250429) (1.0.4)
Requirement already satisfied: sphinxcontrib-devhelp<=1.0.5 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.1.0.dev20250429) (1.0.2)
Requirement already satisfied: sphinxcontrib-jsmath in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.1.0.dev20250429) (1.0.1)
Requirement already satisfied: sphinxcontrib-htmlhelp<=2.0.4 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.1.0.dev20250429) (2.0.1)
Requirement already satisfied: sphinxcontrib-serializinghtml<=1.1.9 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.1.0.dev20250429) (1.1.5)
Requirement already satisfied: sphinxcontrib-qthelp<=1.0.6 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.1.0.dev20250429) (1.0.3)
Requirement already satisfied: Jinja2<3.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.1.0.dev20250429) (2.11.3)
Requirement already satisfied: Pygments>=2.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.1.0.dev20250429) (2.18.0)
Requirement already satisfied: docutils>=0.12 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.1.0.dev20250429) (0.21.2)
Requirement already satisfied: snowballstemmer>=1.1 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.1.0.dev20250429) (2.2.0)
Requirement already satisfied: babel>=1.3 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.1.0.dev20250429) (2.16.0)
Requirement already satisfied: alabaster<0.7.12,>=0.7 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.1.0.dev20250429) (0.7.11)
Requirement already satisfied: imagesize in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.1.0.dev20250429) (1.4.1)
Requirement already satisfied: requests>=2.5.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.1.0.dev20250429) (2.32.3)
Requirement already satisfied: setuptools in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.1.0.dev20250429) (75.1.0)
Requirement already satisfied: packaging in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.1.0.dev20250429) (24.1)
Requirement already satisfied: markupsafe<=2.0.1 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.1.0.dev20250429) (2.0.1)
Requirement already satisfied: pytest in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.1.0.dev20250429) (8.3.3)
Requirement already satisfied: pytest-cov in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.1.0.dev20250429) (5.0.0)
Requirement already satisfied: html5lib in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.1.0.dev20250429) (1.1)
Requirement already satisfied: typed_ast in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.1.0.dev20250429) (1.5.5)
Requirement already satisfied: cython in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from Sphinx==3.1.0.dev20250429) (3.0.11)
Requirement already satisfied: charset-normalizer<4,>=2 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from requests>=2.5.0->Sphinx==3.1.0.dev20250429) (3.4.0)
Requirement already satisfied: idna<4,>=2.5 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from requests>=2.5.0->Sphinx==3.1.0.dev20250429) (3.10)
Requirement already satisfied: urllib3<3,>=1.21.1 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from requests>=2.5.0->Sphinx==3.1.0.dev20250429) (2.2.3)
Requirement already satisfied: certifi>=2017.4.17 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from requests>=2.5.0->Sphinx==3.1.0.dev20250429) (2024.8.30)
Requirement already satisfied: six>=1.9 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from html5lib->Sphinx==3.1.0.dev20250429) (1.16.0)
Requirement already satisfied: webencodings in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from html5lib->Sphinx==3.1.0.dev20250429) (0.5.1)
Requirement already satisfied: iniconfig in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest->Sphinx==3.1.0.dev20250429) (2.0.0)
Requirement already satisfied: pluggy<2,>=1.5 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest->Sphinx==3.1.0.dev20250429) (1.5.0)
Requirement already satisfied: exceptiongroup>=1.0.0rc8 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest->Sphinx==3.1.0.dev20250429) (1.2.2)
Requirement already satisfied: tomli>=1 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest->Sphinx==3.1.0.dev20250429) (2.0.2)
Requirement already satisfied: coverage>=5.2.1 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from coverage[toml]>=5.2.1->pytest-cov->Sphinx==3.1.0.dev20250429) (7.6.4)
Installing collected packages: Sphinx
  Attempting uninstall: Sphinx
    Found existing installation: Sphinx 3.1.0.dev20241024
    Uninstalling Sphinx-3.1.0.dev20241024:
      Successfully uninstalled Sphinx-3.1.0.dev20241024
  Running setup.py develop for Sphinx
  DEPRECATION: Legacy editable install of Sphinx[test]==3.1.0.dev20250429 from file:///testbed (setup.py develop) is deprecated. pip 25.0 will enforce this behaviour change. A possible replacement is to add a pyproject.toml or enable --use-pep517, and use setuptools >= 64. If the resulting installation is not behaving as expected, try using --config-settings editable_mode=compat. Please consult the setuptools documentation for more information. Discussion can be found at https://github.com/pypa/pip/issues/11457
Successfully installed Sphinx
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable.It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
+ git checkout 9988d5ce267bf0df4791770b469431b1fb00dcdd tests/roots/test-ext-autodoc/target/docstring_signature.py tests/test_ext_autodoc_configs.py
Updated 0 paths from d57c5b72f
+ git apply -v -
Checking patch tests/roots/test-ext-autodoc/target/docstring_signature.py...
Checking patch tests/test_ext_autodoc_configs.py...
Applied patch tests/roots/test-ext-autodoc/target/docstring_signature.py cleanly.
Applied patch tests/test_ext_autodoc_configs.py cleanly.
+ : '>>>>> Start Test Output'
+ tox --current-env -epy39 -v -- tests/roots/test-ext-autodoc/target/docstring_signature.py tests/test_ext_autodoc_configs.py
py39: commands[0]> pytest -rA --durations 25 tests/roots/test-ext-autodoc/target/docstring_signature.py tests/test_ext_autodoc_configs.py
============================= test session starts ==============================
platform linux -- Python 3.9.20, pytest-8.3.3, pluggy-1.5.0
cachedir: .tox/py39/.pytest_cache
libraries: Sphinx-3.1.0+/9988d5ce2, docutils-0.21.2
base tempdir: /tmp/pytest-of-root/pytest-0
rootdir: /testbed
configfile: setup.cfg
plugins: cov-5.0.0
collected 14 items

tests/test_ext_autodoc_configs.py ......FF......                         [100%]

=================================== FAILURES ===================================
_____________ test_autoclass_content_and_docstring_signature_init ______________

app = <SphinxTestApp buildername='html'>

    @pytest.mark.sphinx('html', testroot='ext-autodoc')
    def test_autoclass_content_and_docstring_signature_init(app):
        app.config.autoclass_content = 'init'
        options = {"members": None,
                   "undoc-members": None}
        actual = do_autodoc(app, 'module', 'target.docstring_signature', options)
>       assert list(actual) == [
            '',
            '.. py:module:: target.docstring_signature',
            '',
            '',
            '.. py:class:: A(foo, bar)',
            '   :module: target.docstring_signature',
            '',
            '',
            '.. py:class:: B(foo, bar, baz)',
            '   :module: target.docstring_signature',
            '',
            '',
            '.. py:class:: C(foo, bar, baz)',
            '   :module: target.docstring_signature',
            '',
            '',
            '.. py:class:: D(foo, bar, baz)',
            '   :module: target.docstring_signature',
            '',
            '',
            '.. py:class:: E(foo: int, bar: int, baz: int) -> None',
            '              E(foo: str, bar: str, baz: str) -> None',
            '   :module: target.docstring_signature',
            ''
        ]
E       AssertionError: assert ['', '.. py:m...gnature', ...] == ['', '.. py:m...gnature', ...]
E         
E         At index 20 diff: '.. py:class:: E(foo: int, bar: int, baz: int) -> None \\' != '.. py:class:: E(foo: int, bar: int, baz: int) -> None'
E         Use -v to get more diff

tests/test_ext_autodoc_configs.py:363: AssertionError
--------------------------- Captured stdout teardown ---------------------------
# testroot: root
# builder: html
# srcdir: /tmp/pytest-of-root/pytest-0/ext-autodoc
# outdir: /tmp/pytest-of-root/pytest-0/ext-autodoc/_build/html
# status: 
[01mRunning Sphinx v3.1.0+/9988d5ce2[39;49;00m

# warning: 
[91mWARNING: while setting up extension sphinx.addnodes: node class 'meta' is already registered, its visitors will be overridden[39;49;00m

_____________ test_autoclass_content_and_docstring_signature_both ______________

app = <SphinxTestApp buildername='html'>

    @pytest.mark.sphinx('html', testroot='ext-autodoc')
    def test_autoclass_content_and_docstring_signature_both(app):
        app.config.autoclass_content = 'both'
        options = {"members": None,
                   "undoc-members": None}
        actual = do_autodoc(app, 'module', 'target.docstring_signature', options)
>       assert list(actual) == [
            '',
            '.. py:module:: target.docstring_signature',
            '',
            '',
            '.. py:class:: A(foo, bar)',
            '   :module: target.docstring_signature',
            '',
            '',
            '.. py:class:: B(foo, bar)',
            '   :module: target.docstring_signature',
            '',
            '   B(foo, bar, baz)',
            '',
            '',
            '.. py:class:: C(foo, bar)',
            '   :module: target.docstring_signature',
            '',
            '   C(foo, bar, baz)',
            '',
            '',
            '.. py:class:: D(foo, bar, baz)',
            '   :module: target.docstring_signature',
            '',
            '',
            '.. py:class:: E(foo: int, bar: int, baz: int) -> None',
            '              E(foo: str, bar: str, baz: str) -> None',
            '   :module: target.docstring_signature',
            '',
        ]
E       AssertionError: assert ['', '.. py:m...gnature', ...] == ['', '.. py:m...gnature', ...]
E         
E         At index 24 diff: '.. py:class:: E(foo: int, bar: int, baz: int) -> None \\' != '.. py:class:: E(foo: int, bar: int, baz: int) -> None'
E         Use -v to get more diff

tests/test_ext_autodoc_configs.py:397: AssertionError
--------------------------- Captured stdout teardown ---------------------------
# testroot: root
# builder: html
# srcdir: /tmp/pytest-of-root/pytest-0/ext-autodoc
# outdir: /tmp/pytest-of-root/pytest-0/ext-autodoc/_build/html
# status: 
[01mRunning Sphinx v3.1.0+/9988d5ce2[39;49;00m

# warning: 
[91mWARNING: while setting up extension sphinx.addnodes: node class 'meta' is already registered, its visitors will be overridden[39;49;00m

=============================== warnings summary ===============================
sphinx/util/docutils.py:45
  /testbed/sphinx/util/docutils.py:45: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    __version_info__ = tuple(LooseVersion(docutils.__version__).version)

sphinx/registry.py:22
  /testbed/sphinx/registry.py:22: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
    from pkg_resources import iter_entry_points

../opt/miniconda3/envs/testbed/lib/python3.9/site-packages/pkg_resources/__init__.py:3154
../opt/miniconda3/envs/testbed/lib/python3.9/site-packages/pkg_resources/__init__.py:3154
../opt/miniconda3/envs/testbed/lib/python3.9/site-packages/pkg_resources/__init__.py:3154
../opt/miniconda3/envs/testbed/lib/python3.9/site-packages/pkg_resources/__init__.py:3154
  /opt/miniconda3/envs/testbed/lib/python3.9/site-packages/pkg_resources/__init__.py:3154: DeprecationWarning: Deprecated call to `pkg_resources.declare_namespace('sphinxcontrib')`.
  Implementing implicit namespace packages (as specified in PEP 420) is preferred to `pkg_resources.declare_namespace`. See https://setuptools.pypa.io/en/latest/references/keywords.html#keyword-namespace-packages
    declare_namespace(pkg)

sphinx/directives/patches.py:15
  /testbed/sphinx/directives/patches.py:15: DeprecationWarning: The `docutils.parsers.rst.directive.html` module will be removed in Docutils 2.0. Since Docutils 0.18, the "Meta" node is defined in `docutils.parsers.rst.directives.misc`.
    from docutils.parsers.rst.directives import images, html, tables

tests/test_ext_autodoc_configs.py::test_autodoc_typehints_description
  /testbed/sphinx/transforms/__init__.py:211: PendingDeprecationWarning: nodes.Node.traverse() is obsoleted by Node.findall().
    for node in self.document.traverse():  # type: Node

tests/test_ext_autodoc_configs.py::test_autodoc_typehints_description
  /testbed/sphinx/transforms/i18n.py:88: PendingDeprecationWarning: nodes.Node.traverse() is obsoleted by Node.findall().
    for node in self.document.traverse(addnodes.translatable):

tests/test_ext_autodoc_configs.py::test_autodoc_typehints_description
  /testbed/sphinx/transforms/__init__.py:111: PendingDeprecationWarning: nodes.Node.traverse() is obsoleted by Node.findall().
    for ref in self.document.traverse(nodes.substitution_reference):

tests/test_ext_autodoc_configs.py::test_autodoc_typehints_description
  /testbed/sphinx/transforms/__init__.py:132: PendingDeprecationWarning: nodes.Node.traverse() is obsoleted by Node.findall().
    for node in self.document.traverse(nodes.target):

tests/test_ext_autodoc_configs.py::test_autodoc_typehints_description
  /testbed/sphinx/transforms/__init__.py:151: PendingDeprecationWarning: nodes.Node.traverse() is obsoleted by Node.findall().
    for node in self.document.traverse(nodes.block_quote):

tests/test_ext_autodoc_configs.py::test_autodoc_typehints_description
  /testbed/sphinx/transforms/__init__.py:176: PendingDeprecationWarning: nodes.Node.traverse() is obsoleted by Node.findall().
    for node in self.document.traverse(nodes.Element):

tests/test_ext_autodoc_configs.py::test_autodoc_typehints_description
  /testbed/sphinx/transforms/__init__.py:223: PendingDeprecationWarning: nodes.Node.traverse() is obsoleted by Node.findall().
    for node in self.document.traverse(addnodes.index):

tests/test_ext_autodoc_configs.py::test_autodoc_typehints_description
  /testbed/sphinx/transforms/references.py:30: PendingDeprecationWarning: nodes.Node.traverse() is obsoleted by Node.findall().
    for node in self.document.traverse(nodes.substitution_definition):

tests/test_ext_autodoc_configs.py::test_autodoc_typehints_description
  /testbed/sphinx/transforms/__init__.py:190: PendingDeprecationWarning: nodes.Node.traverse() is obsoleted by Node.findall().
    for node in self.document.traverse(nodes.section):

tests/test_ext_autodoc_configs.py::test_autodoc_typehints_description
  /testbed/sphinx/transforms/__init__.py:280: PendingDeprecationWarning: nodes.Node.traverse() is obsoleted by Node.findall().
    for node in self.document.traverse(nodes.doctest_block):

tests/test_ext_autodoc_configs.py::test_autodoc_typehints_description
  /testbed/sphinx/domains/citation.py:117: PendingDeprecationWarning: nodes.Node.traverse() is obsoleted by Node.findall().
    for node in self.document.traverse(nodes.citation):

tests/test_ext_autodoc_configs.py::test_autodoc_typehints_description
  /testbed/sphinx/domains/citation.py:136: PendingDeprecationWarning: nodes.Node.traverse() is obsoleted by Node.findall().
    for node in self.document.traverse(nodes.citation_reference):

tests/test_ext_autodoc_configs.py::test_autodoc_typehints_description
  /testbed/sphinx/builders/latex/transforms.py:37: PendingDeprecationWarning: nodes.Node.traverse() is obsoleted by Node.findall().
    for node in self.document.traverse(matcher):  # type: nodes.Element

tests/test_ext_autodoc_configs.py::test_autodoc_typehints_description
  /testbed/sphinx/transforms/__init__.py:292: PendingDeprecationWarning: nodes.Node.traverse() is obsoleted by Node.findall().
    for node in self.document.traverse(matcher):  # type: Element

tests/test_ext_autodoc_configs.py::test_autodoc_typehints_description
  /testbed/sphinx/util/compat.py:44: PendingDeprecationWarning: nodes.Node.traverse() is obsoleted by Node.findall().
    for node in self.document.traverse(addnodes.index):

tests/test_ext_autodoc_configs.py::test_autodoc_typehints_description
  /testbed/sphinx/domains/index.py:52: PendingDeprecationWarning: nodes.Node.traverse() is obsoleted by Node.findall().
    for node in document.traverse(addnodes.index):

tests/test_ext_autodoc_configs.py::test_autodoc_typehints_description
  /testbed/sphinx/domains/math.py:85: PendingDeprecationWarning: nodes.Node.traverse() is obsoleted by Node.findall().
    self.data['has_equations'][docname] = any(document.traverse(math_node))

tests/test_ext_autodoc_configs.py::test_autodoc_typehints_description
  /testbed/sphinx/environment/collectors/asset.py:47: PendingDeprecationWarning: nodes.Node.traverse() is obsoleted by Node.findall().
    for node in doctree.traverse(nodes.image):

tests/test_ext_autodoc_configs.py::test_autodoc_typehints_description
  /testbed/sphinx/environment/collectors/asset.py:124: PendingDeprecationWarning: nodes.Node.traverse() is obsoleted by Node.findall().
    for node in doctree.traverse(addnodes.download_reference):

tests/test_ext_autodoc_configs.py::test_autodoc_typehints_description
  /testbed/sphinx/environment/collectors/title.py:46: PendingDeprecationWarning: nodes.Node.traverse() is obsoleted by Node.findall().
    for node in doctree.traverse(nodes.section):

tests/test_ext_autodoc_configs.py::test_autodoc_typehints_description
  /testbed/sphinx/transforms/__init__.py:302: PendingDeprecationWarning: nodes.Node.traverse() is obsoleted by Node.findall().
    for node in self.document.traverse(nodes.system_message):

tests/test_ext_autodoc_configs.py::test_autodoc_typehints_description
  /testbed/sphinx/transforms/__init__.py:391: PendingDeprecationWarning: nodes.Node.traverse() is obsoleted by Node.findall().
    for node in self.document.traverse(addnodes.manpage):

tests/test_ext_autodoc_configs.py::test_autodoc_typehints_description
  /testbed/sphinx/transforms/i18n.py:484: PendingDeprecationWarning: nodes.Node.traverse() is obsoleted by Node.findall().
    for inline in self.document.traverse(matcher):  # type: nodes.inline

tests/test_ext_autodoc_configs.py::test_autodoc_typehints_description
  /testbed/sphinx/domains/cpp.py:6877: PendingDeprecationWarning: nodes.Node.traverse() is obsoleted by Node.findall().
    for node in self.document.traverse(AliasNode):

tests/test_ext_autodoc_configs.py::test_autodoc_typehints_description
  /testbed/sphinx/transforms/post_transforms/__init__.py:71: PendingDeprecationWarning: nodes.Node.traverse() is obsoleted by Node.findall().
    for node in self.document.traverse(addnodes.pending_xref):

tests/test_ext_autodoc_configs.py::test_autodoc_typehints_description
  /testbed/sphinx/util/nodes.py:596: PendingDeprecationWarning: nodes.Node.traverse() is obsoleted by Node.findall().
    for node in document.traverse(addnodes.only):

tests/test_ext_autodoc_configs.py::test_autodoc_typehints_description
tests/test_ext_autodoc_configs.py::test_autodoc_typehints_description
  /testbed/sphinx/transforms/post_transforms/images.py:35: PendingDeprecationWarning: nodes.Node.traverse() is obsoleted by Node.findall().
    for node in self.document.traverse(nodes.image):

tests/test_ext_autodoc_configs.py::test_autodoc_typehints_description
  /testbed/sphinx/transforms/post_transforms/__init__.py:215: PendingDeprecationWarning: nodes.Node.traverse() is obsoleted by Node.findall().
    for node in self.document.traverse(addnodes.desc_sig_element):

tests/test_ext_autodoc_configs.py::test_autodoc_typehints_description
  /testbed/sphinx/builders/latex/transforms.py:595: PendingDeprecationWarning: nodes.Node.traverse() is obsoleted by Node.findall().
    for node in self.document.traverse(nodes.title):

tests/test_ext_autodoc_configs.py::test_autodoc_typehints_description
  /testbed/sphinx/transforms/post_transforms/code.py:44: PendingDeprecationWarning: nodes.Node.traverse() is obsoleted by Node.findall().
    for node in self.document.traverse(addnodes.highlightlang):

tests/test_ext_autodoc_configs.py::test_autodoc_typehints_description
  /testbed/sphinx/transforms/post_transforms/code.py:99: PendingDeprecationWarning: nodes.Node.traverse() is obsoleted by Node.findall().
    for lbnode in self.document.traverse(nodes.literal_block):  # type: nodes.literal_block

tests/test_ext_autodoc_configs.py::test_autodoc_typehints_description
  /testbed/sphinx/transforms/post_transforms/code.py:103: PendingDeprecationWarning: nodes.Node.traverse() is obsoleted by Node.findall().
    for dbnode in self.document.traverse(nodes.doctest_block):  # type: nodes.doctest_block

tests/test_ext_autodoc_configs.py::test_autodoc_typehints_description
  /testbed/sphinx/environment/__init__.py:541: PendingDeprecationWarning: nodes.Node.traverse() is obsoleted by Node.findall().
    for toctreenode in doctree.traverse(addnodes.toctree):

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
==================================== PASSES ====================================
--------------------------- Captured stdout teardown ---------------------------
# testroot: root
# builder: html
# srcdir: /tmp/pytest-of-root/pytest-0/ext-autodoc
# outdir: /tmp/pytest-of-root/pytest-0/ext-autodoc/_build/html
# status: 
[01mRunning Sphinx v3.1.0+/9988d5ce2[39;49;00m

# warning: 
[91mWARNING: while setting up extension sphinx.addnodes: node class 'meta' is already registered, its visitors will be overridden[39;49;00m

--------------------------- Captured stdout teardown ---------------------------
# testroot: root
# builder: html
# srcdir: /tmp/pytest-of-root/pytest-0/ext-autodoc
# outdir: /tmp/pytest-of-root/pytest-0/ext-autodoc/_build/html
# status: 
[01mRunning Sphinx v3.1.0+/9988d5ce2[39;49;00m

# warning: 
[91mWARNING: while setting up extension sphinx.addnodes: node class 'meta' is already registered, its visitors will be overridden[39;49;00m

--------------------------- Captured stdout teardown ---------------------------
# testroot: root
# builder: html
# srcdir: /tmp/pytest-of-root/pytest-0/ext-autodoc
# outdir: /tmp/pytest-of-root/pytest-0/ext-autodoc/_build/html
# status: 
[01mRunning Sphinx v3.1.0+/9988d5ce2[39;49;00m

# warning: 
[91mWARNING: while setting up extension sphinx.addnodes: node class 'meta' is already registered, its visitors will be overridden[39;49;00m

--------------------------- Captured stdout teardown ---------------------------
# testroot: root
# builder: html
# srcdir: /tmp/pytest-of-root/pytest-0/ext-autodoc
# outdir: /tmp/pytest-of-root/pytest-0/ext-autodoc/_build/html
# status: 
[01mRunning Sphinx v3.1.0+/9988d5ce2[39;49;00m

# warning: 
[91mWARNING: while setting up extension sphinx.addnodes: node class 'meta' is already registered, its visitors will be overridden[39;49;00m

--------------------------- Captured stdout teardown ---------------------------
# testroot: root
# builder: html
# srcdir: /tmp/pytest-of-root/pytest-0/ext-autodoc
# outdir: /tmp/pytest-of-root/pytest-0/ext-autodoc/_build/html
# status: 
[01mRunning Sphinx v3.1.0+/9988d5ce2[39;49;00m

# warning: 
[91mWARNING: while setting up extension sphinx.addnodes: node class 'meta' is already registered, its visitors will be overridden[39;49;00m

--------------------------- Captured stdout teardown ---------------------------
# testroot: root
# builder: html
# srcdir: /tmp/pytest-of-root/pytest-0/ext-autodoc
# outdir: /tmp/pytest-of-root/pytest-0/ext-autodoc/_build/html
# status: 
[01mRunning Sphinx v3.1.0+/9988d5ce2[39;49;00m

# warning: 
[91mWARNING: while setting up extension sphinx.addnodes: node class 'meta' is already registered, its visitors will be overridden[39;49;00m

--------------------------- Captured stdout teardown ---------------------------
# testroot: root
# builder: html
# srcdir: /tmp/pytest-of-root/pytest-0/ext-autodoc
# outdir: /tmp/pytest-of-root/pytest-0/ext-autodoc/_build/html
# status: 
[01mRunning Sphinx v3.1.0+/9988d5ce2[39;49;00m

# warning: 

--------------------------- Captured stdout teardown ---------------------------
# testroot: root
# builder: html
# srcdir: /tmp/pytest-of-root/pytest-0/ext-autodoc
# outdir: /tmp/pytest-of-root/pytest-0/ext-autodoc/_build/html
# status: 
[01mRunning Sphinx v3.1.0+/9988d5ce2[39;49;00m

# warning: 
[91mWARNING: while setting up extension sphinx.addnodes: node class 'meta' is already registered, its visitors will be overridden[39;49;00m

--------------------------- Captured stdout teardown ---------------------------
# testroot: root
# builder: html
# srcdir: /tmp/pytest-of-root/pytest-0/ext-autodoc
# outdir: /tmp/pytest-of-root/pytest-0/ext-autodoc/_build/html
# status: 
[01mRunning Sphinx v3.1.0+/9988d5ce2[39;49;00m

# warning: 
[91mWARNING: while setting up extension sphinx.addnodes: node class 'meta' is already registered, its visitors will be overridden[39;49;00m

--------------------------- Captured stdout teardown ---------------------------
# testroot: root
# builder: text
# srcdir: /tmp/pytest-of-root/pytest-0/ext-autodoc
# outdir: /tmp/pytest-of-root/pytest-0/ext-autodoc/_build/text
# status: 
[01mRunning Sphinx v3.1.0+/9988d5ce2[39;49;00m
[01mbuilding [mo]: [39;49;00mtargets for 0 po files that are out of date
[01mbuilding [text]: [39;49;00mtargets for 1 source files that are out of date
[01mupdating environment: [39;49;00m[new config] 1 added, 0 changed, 0 removed
[01mreading sources... [39;49;00m[100%] [35mindex[39;49;00m                                                
[01mlooking for now-outdated files... [39;49;00mnone found
[01mpickling environment... [39;49;00mdone
[01mchecking consistency... [39;49;00mdone
[01mpreparing documents... [39;49;00mdone
[01mwriting output... [39;49;00m[100%] [32mindex[39;49;00m                                                 
[01mbuild succeeded, 1 warning.[39;49;00m

The text files are in ../tmp/pytest-of-root/pytest-0/ext-autodoc/_build/text.

# warning: 
[91mWARNING: while setting up extension sphinx.addnodes: node class 'meta' is already registered, its visitors will be overridden[39;49;00m

--------------------------- Captured stdout teardown ---------------------------
# testroot: root
# builder: html
# srcdir: /tmp/pytest-of-root/pytest-0/ext-autodoc
# outdir: /tmp/pytest-of-root/pytest-0/ext-autodoc/_build/html
# status: 
[01mRunning Sphinx v3.1.0+/9988d5ce2[39;49;00m
[01mloading pickled environment... [39;49;00mdone

# warning: 
[91mWARNING: while setting up extension sphinx.addnodes: node class 'meta' is already registered, its visitors will be overridden[39;49;00m

--------------------------- Captured stdout teardown ---------------------------
# testroot: root
# builder: html
# srcdir: /tmp/pytest-of-root/pytest-0/ext-autodoc
# outdir: /tmp/pytest-of-root/pytest-0/ext-autodoc/_build/html
# status: 
[01mRunning Sphinx v3.1.0+/9988d5ce2[39;49;00m
[01mloading pickled environment... [39;49;00mdone

# warning: 
[91mWARNING: while setting up extension sphinx.addnodes: node class 'meta' is already registered, its visitors will be overridden[39;49;00m

============================= slowest 25 durations =============================
1.18s setup    tests/test_ext_autodoc_configs.py::test_autoclass_content_class
0.11s call     tests/test_ext_autodoc_configs.py::test_autodoc_default_options
0.11s call     tests/test_ext_autodoc_configs.py::test_autodoc_typehints_description
0.10s setup    tests/test_ext_autodoc_configs.py::test_autodoc_typehints_signature
0.10s setup    tests/test_ext_autodoc_configs.py::test_autoclass_content_and_docstring_signature_both
0.09s call     tests/test_ext_autodoc_configs.py::test_autoclass_content_and_docstring_signature_class
0.08s setup    tests/test_ext_autodoc_configs.py::test_mocked_module_imports
0.08s call     tests/test_ext_autodoc_configs.py::test_autodoc_typehints_none
0.07s setup    tests/test_ext_autodoc_configs.py::test_autoclass_content_both
0.07s setup    tests/test_ext_autodoc_configs.py::test_autoclass_content_init
0.07s call     tests/test_ext_autodoc_configs.py::test_autodoc_default_options_with_values
0.07s setup    tests/test_ext_autodoc_configs.py::test_autoclass_content_and_docstring_signature_class
0.07s setup    tests/test_ext_autodoc_configs.py::test_autoclass_content_and_docstring_signature_init
0.06s setup    tests/test_ext_autodoc_configs.py::test_autodoc_inherit_docstrings
0.06s call     tests/test_ext_autodoc_configs.py::test_autoclass_content_and_docstring_signature_init
0.06s call     tests/test_ext_autodoc_configs.py::test_autoclass_content_init
0.06s call     tests/test_ext_autodoc_configs.py::test_autodoc_docstring_signature
0.05s setup    tests/test_ext_autodoc_configs.py::test_autodoc_docstring_signature
0.05s setup    tests/test_ext_autodoc_configs.py::test_autodoc_default_options_with_values
0.04s call     tests/test_ext_autodoc_configs.py::test_autoclass_content_both
0.04s call     tests/test_ext_autodoc_configs.py::test_autodoc_typehints_signature
0.03s call     tests/test_ext_autodoc_configs.py::test_autoclass_content_class
0.03s setup    tests/test_ext_autodoc_configs.py::test_autodoc_typehints_description
0.03s call     tests/test_ext_autodoc_configs.py::test_mocked_module_imports
0.02s setup    tests/test_ext_autodoc_configs.py::test_autodoc_typehints_none
=========================== short test summary info ============================
PASSED tests/test_ext_autodoc_configs.py::test_autoclass_content_class
PASSED tests/test_ext_autodoc_configs.py::test_autoclass_content_init
PASSED tests/test_ext_autodoc_configs.py::test_autoclass_content_both
PASSED tests/test_ext_autodoc_configs.py::test_autodoc_inherit_docstrings
PASSED tests/test_ext_autodoc_configs.py::test_autodoc_docstring_signature
PASSED tests/test_ext_autodoc_configs.py::test_autoclass_content_and_docstring_signature_class
PASSED tests/test_ext_autodoc_configs.py::test_mocked_module_imports
PASSED tests/test_ext_autodoc_configs.py::test_autodoc_typehints_signature
PASSED tests/test_ext_autodoc_configs.py::test_autodoc_typehints_none
PASSED tests/test_ext_autodoc_configs.py::test_autodoc_typehints_description
PASSED tests/test_ext_autodoc_configs.py::test_autodoc_default_options
PASSED tests/test_ext_autodoc_configs.py::test_autodoc_default_options_with_values
FAILED tests/test_ext_autodoc_configs.py::test_autoclass_content_and_docstring_signature_init
FAILED tests/test_ext_autodoc_configs.py::test_autoclass_content_and_docstring_signature_both
================== 2 failed, 12 passed, 41 warnings in 4.16s ===================
py39: exit 1 (6.76 seconds) /testbed> pytest -rA --durations 25 tests/roots/test-ext-autodoc/target/docstring_signature.py tests/test_ext_autodoc_configs.py pid=76
  py39: FAIL code 1 (6.82=setup[0.06]+cmd[6.76] seconds)
  evaluation failed :( (7.29 seconds)
+ : '>>>>> End Test Output'
+ git checkout 9988d5ce267bf0df4791770b469431b1fb00dcdd tests/roots/test-ext-autodoc/target/docstring_signature.py tests/test_ext_autodoc_configs.py
Updated 2 paths from d57c5b72f
