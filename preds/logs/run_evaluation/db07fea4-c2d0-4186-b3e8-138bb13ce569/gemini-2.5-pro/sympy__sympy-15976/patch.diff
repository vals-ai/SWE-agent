diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..db0ecc1564
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,16 @@
+
+import sympy
+from sympy.printing.mathml import mathml
+
+x2, y, z = sympy.symbols('x2 y z')
+y = x2*z+x2**3
+f = open('sympy_test.html', 'w')
+f.write('<meta charset="UTF-8">\n') # Add meta tag for proper rendering
+f.write('<html>\n')
+f.write('<body>\n')
+f.write('<h1>MathML Output</h1>\n')
+f.write(sympy.mathml(y, printer='presentation')+'\n')
+f.write('</body>\n')
+f.write('</html>\n')
+f.close()
+print("Script completed successfully, sympy_test.html generated.")
\ No newline at end of file
diff --git a/sympy/printing/mathml.py b/sympy/printing/mathml.py
index 3f8b8d49e0..8505141f8f 100644
--- a/sympy/printing/mathml.py
+++ b/sympy/printing/mathml.py
@@ -761,9 +761,15 @@ def join(items):
                     mrow.appendChild(mi)
                 return mrow
             else:
-                mi = self.dom.createElement('mi')
-                mi.appendChild(self.dom.createTextNode(items[0]))
-                return mi
+                item = items[0]
+                if item.isdigit():
+                    mn = self.dom.createElement('mn')
+                    mn.appendChild(self.dom.createTextNode(item))
+                    return mn
+                else:
+                    mi = self.dom.createElement('mi')
+                    mi.appendChild(self.dom.createTextNode(item))
+                    return mi
 
         # translate name, supers and subs to unicode characters
         def translate(s):
diff --git a/sympy_test.html b/sympy_test.html
new file mode 100644
index 0000000000..fed7df9b6a
--- /dev/null
+++ b/sympy_test.html
@@ -0,0 +1,7 @@
+<meta charset="UTF-8">
+<html>
+<body>
+<h1>MathML Output</h1>
+<mrow><msup><mrow><mfenced><mi><msub><mi>x</mi><mn>2</mn></msub></mi></mfenced></mrow><mn>3</mn></msup><mo>+</mo><mrow><mi><msub><mi>x</mi><mn>2</mn></msub></mi><mo>&InvisibleTimes;</mo><mi>z</mi></mrow></mrow>
+</body>
+</html>
