diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py
index dab2bc4a5a..7b7385b343 100644
--- a/lib/matplotlib/figure.py
+++ b/lib/matplotlib/figure.py
@@ -1585,6 +1585,7 @@ default: %(va)s
                       wspace=wspace, hspace=hspace,
                       width_ratios=width_ratios,
                       height_ratios=height_ratios)
+        gs.update(wspace=wspace, hspace=hspace)
 
         sfarr = np.empty((nrows, ncols), dtype=object)
         for i in range(ncols):
@@ -2272,19 +2273,15 @@ class SubFigure(FigureBase):
             self.bbox_relative.p0 = bbox.p0
             self.bbox_relative.p1 = bbox.p1
             return
-        # need to figure out *where* this subplotspec is.
-        gs = self._subplotspec.get_gridspec()
-        wr = np.asarray(gs.get_width_ratios())
-        hr = np.asarray(gs.get_height_ratios())
-        dx = wr[self._subplotspec.colspan].sum() / wr.sum()
-        dy = hr[self._subplotspec.rowspan].sum() / hr.sum()
-        x0 = wr[:self._subplotspec.colspan.start].sum() / wr.sum()
-        y0 = 1 - hr[:self._subplotspec.rowspan.stop].sum() / hr.sum()
+        # Get the position from the subplotspec, which includes wspace/hspace
+        new_bbox = self._subplotspec.get_position(self)
         if self.bbox_relative is None:
-            self.bbox_relative = Bbox.from_bounds(x0, y0, dx, dy)
+            # Need to copy the bbox, not just take a reference
+            self.bbox_relative = Bbox.from_bounds(*new_bbox.bounds)
         else:
-            self.bbox_relative.p0 = (x0, y0)
-            self.bbox_relative.p1 = (x0 + dx, y0 + dy)
+            # Update the existing bbox in place
+            self.bbox_relative.p0 = new_bbox.p0
+            self.bbox_relative.p1 = new_bbox.p1
 
     def get_constrained_layout(self):
         """
