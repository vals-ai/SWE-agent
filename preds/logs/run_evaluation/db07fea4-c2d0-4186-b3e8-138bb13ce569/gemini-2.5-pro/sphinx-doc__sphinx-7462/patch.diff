diff --git a/sphinx/domains/python.py b/sphinx/domains/python.py
index 3ca730e30..f7affb5af 100644
--- a/sphinx/domains/python.py
+++ b/sphinx/domains/python.py
@@ -118,7 +118,8 @@ def _parse_annotation(annotation: str) -> List[Node]:
             for elem in node.elts:
                 result.extend(unparse(elem))
                 result.append(addnodes.desc_sig_punctuation('', ', '))
-            result.pop()
+            if result:  # Check if list is not empty before popping
+                result.pop()
             return result
         else:
             raise SyntaxError  # unsupported syntax
diff --git a/sphinx/util/typing.py b/sphinx/util/typing.py
index eb38d232c..95c856726 100644
--- a/sphinx/util/typing.py
+++ b/sphinx/util/typing.py
@@ -91,8 +91,15 @@ def _stringify_py37(annotation: Any) -> str:
             return '%s[[%s], %s]' % (qualname, args, returns)
         elif str(annotation).startswith('typing.Annotated'):  # for py39+
             return stringify(annotation.__args__[0])
-        elif annotation._special:
-            return qualname
+        elif qualname == 'Tuple':
+            if not annotation.__args__:  # Handle Tuple[()]
+                return qualname + '[()]'
+            else:
+                args = ', '.join(stringify(a) for a in annotation.__args__)
+                # Add a trailing comma for single-element tuples (PEP 484)
+                if len(annotation.__args__) == 1:
+                    args += ','
+                return '%s[%s]' % (qualname, args)
         else:
             args = ', '.join(stringify(a) for a in annotation.__args__)
             return '%s[%s]' % (qualname, args)
