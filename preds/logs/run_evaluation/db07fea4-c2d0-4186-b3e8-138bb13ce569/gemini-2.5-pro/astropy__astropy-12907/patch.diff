diff --git a/astropy/modeling/separable.py b/astropy/modeling/separable.py
index a308e27297..45bea36085 100644
--- a/astropy/modeling/separable.py
+++ b/astropy/modeling/separable.py
@@ -242,7 +242,7 @@ def _cstack(left, right):
         cright = _coord_matrix(right, 'right', noutp)
     else:
         cright = np.zeros((noutp, right.shape[1]))
-        cright[-right.shape[0]:, -right.shape[1]:] = 1
+        cright[-right.shape[0]:, -right.shape[1]:] = right
 
     return np.hstack([cleft, cright])
 
diff --git a/astropy/modeling/tests/test_separable.py b/astropy/modeling/tests/test_separable.py
index 8dfe5c8626..a20a2a9c8a 100644
--- a/astropy/modeling/tests/test_separable.py
+++ b/astropy/modeling/tests/test_separable.py
@@ -8,6 +8,7 @@ import pytest
 import numpy as np
 from numpy.testing import assert_allclose
 
+from astropy.modeling import models as m
 from astropy.modeling import custom_model, models
 from astropy.modeling.models import Mapping
 from astropy.modeling.separable import (_coord_matrix, is_separable, _cdot,
@@ -148,3 +149,40 @@ def test_custom_model_separable():
 
     assert not model_c().separable
     assert np.all(separability_matrix(model_c()) == [True, True])
+
+
+def test_nested_compound_separability():
+    """Test separability_matrix with nested CompoundModels (&)."""
+    # Use m instead of models for consistency with the import alias
+    cm_nested = m.Linear1D(10) & m.Linear1D(5)
+    model_nested = m.Pix2Sky_TAN() & cm_nested
+
+    expected_matrix = np.array([
+        [ True,  True, False, False],
+        [ True,  True, False, False],
+        [False, False,  True, False],
+        [False, False, False,  True]
+    ])
+
+    assert_allclose(separability_matrix(model_nested), expected_matrix)
+
+    # Test nesting on the left side as well
+    model_nested_left = cm_nested & m.Pix2Sky_TAN()
+    expected_matrix_left = np.array([
+        [ True, False, False, False],
+        [False,  True, False, False],
+        [False, False,  True,  True],
+        [False, False,  True,  True]
+    ])
+    assert_allclose(separability_matrix(model_nested_left), expected_matrix_left)
+
+    # Test doubly nested
+    cm_nested2 = m.Shift(1) & m.Scale(2)
+    model_doubly_nested = cm_nested & cm_nested2
+    expected_doubly = np.array([
+        [ True, False, False, False],
+        [False,  True, False, False],
+        [False, False,  True, False],
+        [False, False, False,  True]
+    ])
+    assert_allclose(separability_matrix(model_doubly_nested), expected_doubly)
\ No newline at end of file
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..21ca11f483
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,21 @@
+
+from astropy.modeling import models as m
+from astropy.modeling.separable import separability_matrix
+import numpy as np
+
+# Set print options for better matrix display
+np.set_printoptions(linewidth=200)
+
+print("--- Example 1 ---")
+cm = m.Linear1D(10) & m.Linear1D(5)
+print(separability_matrix(cm))
+
+print("\n--- Example 2 ---")
+model2 = m.Pix2Sky_TAN() & m.Linear1D(10) & m.Linear1D(5)
+print(separability_matrix(model2))
+
+print("\n--- Example 3 (Nested) ---")
+model3 = m.Pix2Sky_TAN() & cm
+print(separability_matrix(model3))
+
+print("\nScript completed successfully, no errors.")
\ No newline at end of file
