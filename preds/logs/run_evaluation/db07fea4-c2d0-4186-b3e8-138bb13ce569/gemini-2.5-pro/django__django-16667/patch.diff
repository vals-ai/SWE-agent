diff --git a/django/forms/widgets.py b/django/forms/widgets.py
index 842b73e95c..f4bc74b7cd 100644
--- a/django/forms/widgets.py
+++ b/django/forms/widgets.py
@@ -1157,7 +1157,7 @@ class SelectDateWidget(Widget):
             input_format = formats.sanitize_strftime_format(input_format)
             try:
                 date_value = datetime.date(int(y), int(m), int(d))
-            except ValueError:
+            except (ValueError, OverflowError):
                 # Return pseudo-ISO dates with zeros for any unselected values,
                 # e.g. '2017-0-23'.
                 return "%s-%s-%s" % (y or 0, m or 0, d or 0)
diff --git a/tests/forms_tests/widget_tests/test_selectdatewidget.py b/tests/forms_tests/widget_tests/test_selectdatewidget.py
index cfcd037987..36025092e0 100644
--- a/tests/forms_tests/widget_tests/test_selectdatewidget.py
+++ b/tests/forms_tests/widget_tests/test_selectdatewidget.py
@@ -1,3 +1,4 @@
+import sys
 from datetime import date
 
 from django.forms import DateField, Form, SelectDateWidget
@@ -745,3 +746,32 @@ class SelectDateWidgetTest(WidgetTest):
             "</select></fieldset></div>",
             form.render(),
         )
+
+    def test_value_from_datadict_overflow(self):
+        """value_from_datadict() should handle OverflowError gracefully."""
+        # Use a value larger than sys.maxsize if possible, otherwise a large number
+        # that would likely overflow C long but maybe not Python's arbitrary precision int.
+        # Python int itself won't overflow, but datetime.date() might.
+        large_year = str(sys.maxsize + 1) if sys.maxsize < float('inf') else '1' + '0' * 20
+        data = {
+            "field_day": "1",
+            "field_month": "1",
+            "field_year": large_year,
+        }
+        # Expect the pseudo-ISO date string, not a crash.
+        expected_value = f"{large_year}-1-1"
+        self.assertEqual(
+            self.widget.value_from_datadict(data, {}, "field"), expected_value
+        )
+
+        # Also test with a year that causes ValueError (outside 1-9999)
+        data_value_error = {
+            "field_day": "1",
+            "field_month": "1",
+            "field_year": "10000",
+        }
+        expected_value_error = "10000-1-1"
+        self.assertEqual(
+            self.widget.value_from_datadict(data_value_error, {}, "field"),
+            expected_value_error,
+        )
\ No newline at end of file
