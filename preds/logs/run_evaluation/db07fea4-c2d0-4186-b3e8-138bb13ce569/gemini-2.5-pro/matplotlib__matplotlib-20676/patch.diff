diff --git a/lib/matplotlib/widgets.py b/lib/matplotlib/widgets.py
index a199e45d40..2d711be722 100644
--- a/lib/matplotlib/widgets.py
+++ b/lib/matplotlib/widgets.py
@@ -2106,8 +2106,15 @@ class SpanSelector(_SelectorWidget):
         props.update(cbook.normalize_kwargs(handle_props, Line2D._alias_map))
 
         if self._interactive:
+            if self.direction == 'horizontal':
+                vmin, _ = self.ax.get_xlim()
+            else:
+                vmin, _ = self.ax.get_ylim()
             self._edge_order = ['min', 'max']
-            self._setup_edge_handle(props)
+            # Initialize handles at the current view limit minimum
+            self._setup_edge_handle(props, (vmin, vmin))
+            # Initialize extents at the current view limit minimum
+            self.extents = vmin, vmin
 
         self._active_handle = None
 
@@ -2155,8 +2162,8 @@ class SpanSelector(_SelectorWidget):
         else:
             self.artists.append(self._rect)
 
-    def _setup_edge_handle(self, props):
-        self._edge_handles = ToolLineHandles(self.ax, self.extents,
+    def _setup_edge_handle(self, props, initial_positions):
+        self._edge_handles = ToolLineHandles(self.ax, initial_positions,
                                              direction=self.direction,
                                              line_props=props,
                                              useblit=self.useblit)
@@ -2212,7 +2219,7 @@ class SpanSelector(_SelectorWidget):
             self._direction = direction
             self.new_axes(self.ax)
             if self._interactive:
-                self._setup_edge_handle(self._edge_handles._line_props)
+                self._setup_edge_handle(self._edge_handles._line_props, self.extents)
         else:
             self._direction = direction
 
