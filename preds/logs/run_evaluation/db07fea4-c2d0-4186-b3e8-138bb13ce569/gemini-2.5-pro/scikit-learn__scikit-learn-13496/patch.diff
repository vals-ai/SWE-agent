diff --git a/sklearn/ensemble/iforest.py b/sklearn/ensemble/iforest.py
index 8a1bd3625..acc59ca90 100644
--- a/sklearn/ensemble/iforest.py
+++ b/sklearn/ensemble/iforest.py
@@ -118,7 +118,11 @@ class IsolationForest(BaseBagging, OutlierMixin):
         by `np.random`.
 
     verbose : int, optional (default=0)
-        Controls the verbosity of the tree building process.
+
+    warm_start : bool, optional (default=False)
+        When set to ``True``, reuse the solution of the previous call to fit
+        and add more estimators to the ensemble, otherwise, just fit a whole
+        new forest. See :term:`the Glossary <warm_start>`.
 
 
     Attributes
@@ -173,7 +177,8 @@ class IsolationForest(BaseBagging, OutlierMixin):
                  n_jobs=None,
                  behaviour='old',
                  random_state=None,
-                 verbose=0):
+                 verbose=0,
+                 warm_start=False):
         super().__init__(
             base_estimator=ExtraTreeRegressor(
                 max_features=1,
@@ -187,7 +192,8 @@ class IsolationForest(BaseBagging, OutlierMixin):
             max_features=max_features,
             n_jobs=n_jobs,
             random_state=random_state,
-            verbose=verbose)
+            verbose=verbose,
+            warm_start=warm_start)
 
         self.behaviour = behaviour
         self.contamination = contamination
diff --git a/sklearn/ensemble/tests/test_iforest.py b/sklearn/ensemble/tests/test_iforest.py
index 67ba2d7f9..a36306449 100644
--- a/sklearn/ensemble/tests/test_iforest.py
+++ b/sklearn/ensemble/tests/test_iforest.py
@@ -359,3 +359,33 @@ def test_iforest_chunks_works2(
 ):
     test_iforest_works(contamination)
     assert mocked_get_chunk.call_count == n_predict_calls
+
+
+def test_iforest_warm_start():
+    """Test Isolation Forest warm start."""
+    rng = check_random_state(0)
+    X = rng.randn(100, 4)
+
+    # Fit with initial estimators
+    clf = IsolationForest(n_estimators=10, random_state=rng, warm_start=True)
+    clf.fit(X)
+    estimators1 = clf.estimators_
+
+    # Add more estimators
+    clf.set_params(n_estimators=20)
+    clf.fit(X)
+    estimators2 = clf.estimators_
+
+    # Check that initial estimators are reused
+    for i in range(len(estimators1)):
+        assert estimators1[i] is estimators2[i]
+    assert len(estimators2) == 20
+
+    # Fit from scratch
+    clf = IsolationForest(n_estimators=20, random_state=rng, warm_start=False)
+    clf.fit(X)
+    estimators3 = clf.estimators_
+
+    # Check that estimators are different
+    assert estimators1 != estimators3[:10]
+    assert len(estimators3) == 20
\ No newline at end of file
